{"expireTime":9007200878668035000,"key":"gatsby-plugin-mdx-entire-payload-fb31baa724226ff28ea25c819a84c653-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"If you want to develop BooGi or use plain Gatsby for your BooGi app\ndevelopment, then you can follow this guide.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":3,"column":45,"offset":113},"indent":[1]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":3,"column":45,"offset":113},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Download dependencies","position":{"start":{"line":5,"column":4,"offset":118},"end":{"line":5,"column":25,"offset":139},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":115},"end":{"line":5,"column":25,"offset":139},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"yarn","position":{"start":{"line":7,"column":1,"offset":141},"end":{"line":9,"column":4,"offset":153},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Run Gatsby in development mode","position":{"start":{"line":11,"column":4,"offset":158},"end":{"line":11,"column":34,"offset":188},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":155},"end":{"line":11,"column":34,"offset":188},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"gatsby develop","position":{"start":{"line":13,"column":1,"offset":190},"end":{"line":15,"column":4,"offset":212},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This will run BooGi on port 8000 on localhost.","position":{"start":{"line":16,"column":1,"offset":213},"end":{"line":16,"column":47,"offset":259},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":213},"end":{"line":16,"column":47,"offset":259},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Build and run docker image locally","position":{"start":{"line":18,"column":4,"offset":264},"end":{"line":18,"column":38,"offset":298},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":261},"end":{"line":18,"column":38,"offset":298},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"docker build -t boogi -f docker/Dockerfile .\ndocker run -dp 80:80 boogi","position":{"start":{"line":20,"column":1,"offset":300},"end":{"line":23,"column":4,"offset":379},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This will run BooGi on port 80 on localhost.","position":{"start":{"line":24,"column":1,"offset":380},"end":{"line":24,"column":45,"offset":424},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":380},"end":{"line":24,"column":45,"offset":424},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Running Locally\",\"order\":1}","position":{"start":{"line":27,"column":1,"offset":427},"end":{"line":27,"column":66,"offset":492},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":27,"column":66,"offset":492}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Running Locally\",\n  \"order\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"If you want to develop BooGi or use plain Gatsby for your BooGi app\\ndevelopment, then you can follow this guide.\"), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Download dependencies\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"yarn\\n\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Run Gatsby in development mode\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"gatsby develop\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"This will run BooGi on port 8000 on localhost.\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Build and run docker image locally\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"docker build -t boogi -f docker/Dockerfile .\\ndocker run -dp 80:80 boogi\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"This will run BooGi on port 80 on localhost.\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Running Locally\",\n  \"order\": 1\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`If you want to develop BooGi or use plain Gatsby for your BooGi app\ndevelopment, then you can follow this guide.`}</p>\n    <section><h2 parentName=\"section\">{`Download dependencies`}</h2><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`yarn\n`}</code></pre></section>\n    <section><h2 parentName=\"section\">{`Run Gatsby in development mode`}</h2><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`gatsby develop\n`}</code></pre><p parentName=\"section\">{`This will run BooGi on port 8000 on localhost.`}</p></section>\n    <section><h2 parentName=\"section\">{`Build and run docker image locally`}</h2><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`docker build -t boogi -f docker/Dockerfile .\ndocker run -dp 80:80 boogi\n`}</code></pre><p parentName=\"section\">{`This will run BooGi on port 80 on localhost.`}</p></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}