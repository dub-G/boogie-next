{"expireTime":9007200878668033000,"key":"gatsby-plugin-mdx-entire-payload-4f4471df6234982f75934999e99ac40d-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"You can add and embed images into content, as this is standard Markdown feature.\nFirst, add images under ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":3,"column":25,"offset":106},"indent":[1]}},{"type":"inlineCode","value":"content","position":{"start":{"line":3,"column":25,"offset":106},"end":{"line":3,"column":34,"offset":115},"indent":[]}},{"type":"text","value":" directory -- it can be a single ","position":{"start":{"line":3,"column":34,"offset":115},"end":{"line":3,"column":67,"offset":148},"indent":[]}},{"type":"inlineCode","value":"images","position":{"start":{"line":3,"column":67,"offset":148},"end":{"line":3,"column":75,"offset":156},"indent":[]}},{"type":"text","value":" directory\nor images can be added to any directory within ","position":{"start":{"line":3,"column":75,"offset":156},"end":{"line":4,"column":48,"offset":214},"indent":[1]}},{"type":"inlineCode","value":"content","position":{"start":{"line":4,"column":48,"offset":214},"end":{"line":4,"column":57,"offset":223},"indent":[]}},{"type":"text","value":" dir.","position":{"start":{"line":4,"column":57,"offset":223},"end":{"line":4,"column":62,"offset":228},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":4,"column":62,"offset":228},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Then, once you have added images, reference them using Markdown image\nsyntax: ","position":{"start":{"line":6,"column":1,"offset":230},"end":{"line":7,"column":9,"offset":308},"indent":[1]}},{"type":"inlineCode","value":"![some image caption](myImage.png)","position":{"start":{"line":7,"column":9,"offset":308},"end":{"line":7,"column":45,"offset":344},"indent":[]}},{"type":"text","value":". You can use any image format,\nhowever images in ","position":{"start":{"line":7,"column":45,"offset":344},"end":{"line":8,"column":19,"offset":394},"indent":[1]}},{"type":"inlineCode","value":"png","position":{"start":{"line":8,"column":19,"offset":394},"end":{"line":8,"column":24,"offset":399},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":8,"column":24,"offset":399},"end":{"line":8,"column":29,"offset":404},"indent":[]}},{"type":"inlineCode","value":"jpeg","position":{"start":{"line":8,"column":29,"offset":404},"end":{"line":8,"column":35,"offset":410},"indent":[]}},{"type":"text","value":" formats will be additionally processed to improve\noveral site performance and user experience.","position":{"start":{"line":8,"column":35,"offset":410},"end":{"line":9,"column":45,"offset":505},"indent":[1]}}],"position":{"start":{"line":6,"column":1,"offset":230},"end":{"line":9,"column":45,"offset":505},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can leave caption empty, e.g. ","position":{"start":{"line":11,"column":1,"offset":507},"end":{"line":11,"column":35,"offset":541},"indent":[]}},{"type":"inlineCode","value":"![](../images/myimg.png)","position":{"start":{"line":11,"column":35,"offset":541},"end":{"line":11,"column":61,"offset":567},"indent":[]}},{"type":"text","value":".\nYou can also reference external images by providing full URL.","position":{"start":{"line":11,"column":61,"offset":567},"end":{"line":12,"column":62,"offset":630},"indent":[1]}}],"position":{"start":{"line":11,"column":1,"offset":507},"end":{"line":12,"column":62,"offset":630},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example","position":{"start":{"line":14,"column":3,"offset":634},"end":{"line":14,"column":10,"offset":641},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":632},"end":{"line":14,"column":12,"offset":643},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":632},"end":{"line":14,"column":12,"offset":643},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Assuming, that all images will be embed in ","position":{"start":{"line":16,"column":1,"offset":645},"end":{"line":16,"column":44,"offset":688},"indent":[]}},{"type":"inlineCode","value":"page.md","position":{"start":{"line":16,"column":44,"offset":688},"end":{"line":16,"column":53,"offset":697},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":16,"column":53,"offset":697},"end":{"line":16,"column":54,"offset":698},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":645},"end":{"line":16,"column":54,"offset":698},"indent":[]}},{"type":"jsx","value":"<Layout>","position":{"start":{"line":18,"column":1,"offset":700},"end":{"line":18,"column":9,"offset":708},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"project\n│\n└───content\n    │── index.md\n    │── img1.png\n    │\n    └───images\n    │   │── img2.png\n    │   └───another\n    │       │── img3.png\n    │\n    └───group\n        │── page.md\n        │── img4.jpeg","position":{"start":{"line":20,"column":1,"offset":710},"end":{"line":35,"column":4,"offset":922},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"markdown","meta":null,"value":"![first image](../img1.png)\n\n![second image](../images/img2.png)\n\n![third image](../images/another/img3.png)\n\n![fourth image](img4.png)\n","position":{"start":{"line":37,"column":1,"offset":924},"end":{"line":46,"column":4,"offset":1076},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"</Layout>","position":{"start":{"line":48,"column":1,"offset":1078},"end":{"line":48,"column":10,"offset":1087},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Adding images\",\"order\":3}","position":{"start":{"line":50,"column":1,"offset":1089},"end":{"line":50,"column":64,"offset":1152},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":50,"column":64,"offset":1152}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Adding images\",\n  \"order\": 3\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Layout = makeShortcode(\"Layout\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"You can add and embed images into content, as this is standard Markdown feature.\\nFirst, add images under \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content\"), \" directory -- it can be a single \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"images\"), \" directory\\nor images can be added to any directory within \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content\"), \" dir.\"), mdx(\"p\", null, \"Then, once you have added images, reference them using Markdown image\\nsyntax: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"![some image caption](myImage.png)\"), \". You can use any image format,\\nhowever images in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"png\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jpeg\"), \" formats will be additionally processed to improve\\noveral site performance and user experience.\"), mdx(\"p\", null, \"You can leave caption empty, e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"![](../images/myimg.png)\"), \".\\nYou can also reference external images by providing full URL.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"Assuming, that all images will be embed in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"page.md\"), \":\"), mdx(Layout, {\n    mdxType: \"Layout\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"project\\n\\u2502\\n\\u2514\\u2500\\u2500\\u2500content\\n    \\u2502\\u2500\\u2500 index.md\\n    \\u2502\\u2500\\u2500 img1.png\\n    \\u2502\\n    \\u2514\\u2500\\u2500\\u2500images\\n    \\u2502   \\u2502\\u2500\\u2500 img2.png\\n    \\u2502   \\u2514\\u2500\\u2500\\u2500another\\n    \\u2502       \\u2502\\u2500\\u2500 img3.png\\n    \\u2502\\n    \\u2514\\u2500\\u2500\\u2500group\\n        \\u2502\\u2500\\u2500 page.md\\n        \\u2502\\u2500\\u2500 img4.jpeg\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-markdown\"\n  }), \"![first image](../img1.png)\\n\\n![second image](../images/img2.png)\\n\\n![third image](../images/another/img3.png)\\n\\n![fourth image](img4.png)\\n\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Adding images\",\n  \"order\": 3\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Layout = makeShortcode(\"Layout\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`You can add and embed images into content, as this is standard Markdown feature.\nFirst, add images under `}<inlineCode parentName=\"p\">{`content`}</inlineCode>{` directory -- it can be a single `}<inlineCode parentName=\"p\">{`images`}</inlineCode>{` directory\nor images can be added to any directory within `}<inlineCode parentName=\"p\">{`content`}</inlineCode>{` dir.`}</p>\n    <p>{`Then, once you have added images, reference them using Markdown image\nsyntax: `}<inlineCode parentName=\"p\">{`![some image caption](myImage.png)`}</inlineCode>{`. You can use any image format,\nhowever images in `}<inlineCode parentName=\"p\">{`png`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`jpeg`}</inlineCode>{` formats will be additionally processed to improve\noveral site performance and user experience.`}</p>\n    <p>{`You can leave caption empty, e.g. `}<inlineCode parentName=\"p\">{`![](../images/myimg.png)`}</inlineCode>{`.\nYou can also reference external images by providing full URL.`}</p>\n    <p><strong parentName=\"p\">{`Example`}</strong></p>\n    <p>{`Assuming, that all images will be embed in `}<inlineCode parentName=\"p\">{`page.md`}</inlineCode>{`:`}</p>\n    <Layout mdxType=\"Layout\">\n      <pre><code parentName=\"pre\" {...{}}>{`project\n│\n└───content\n    │── index.md\n    │── img1.png\n    │\n    └───images\n    │   │── img2.png\n    │   └───another\n    │       │── img3.png\n    │\n    └───group\n        │── page.md\n        │── img4.jpeg\n`}</code></pre>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-markdown\"\n        }}>{`![first image](../img1.png)\n\n![second image](../images/img2.png)\n\n![third image](../images/another/img3.png)\n\n![fourth image](img4.png)\n\n`}</code></pre>\n    </Layout>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}