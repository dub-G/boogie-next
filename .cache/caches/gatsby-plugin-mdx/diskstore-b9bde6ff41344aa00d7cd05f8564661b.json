{"expireTime":9007200878668033000,"key":"gatsby-plugin-mdx-entire-payload-918ea40ef06de669633fb6d7b55b58f4-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":17,"offset":17},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":17,"offset":17},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Install NodeJS (newest 14+ recommended, minimal 12.18).","position":{"start":{"line":4,"column":4,"offset":22},"end":{"line":4,"column":59,"offset":77},"indent":[]}}],"position":{"start":{"line":4,"column":4,"offset":22},"end":{"line":4,"column":59,"offset":77},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":19},"end":{"line":4,"column":59,"offset":77},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Install Yarn: ","position":{"start":{"line":5,"column":4,"offset":81},"end":{"line":5,"column":18,"offset":95},"indent":[]}},{"type":"inlineCode","value":"npm install -g yarn","position":{"start":{"line":5,"column":18,"offset":95},"end":{"line":5,"column":39,"offset":116},"indent":[]}}],"position":{"start":{"line":5,"column":4,"offset":81},"end":{"line":5,"column":39,"offset":116},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":78},"end":{"line":5,"column":39,"offset":116},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Install Boogi CLI: ","position":{"start":{"line":6,"column":4,"offset":120},"end":{"line":6,"column":23,"offset":139},"indent":[]}},{"type":"inlineCode","value":"npm install -g boogi-cli","position":{"start":{"line":6,"column":23,"offset":139},"end":{"line":6,"column":49,"offset":165},"indent":[]}}],"position":{"start":{"line":6,"column":4,"offset":120},"end":{"line":6,"column":49,"offset":165},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":117},"end":{"line":6,"column":49,"offset":165},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":19},"end":{"line":6,"column":49,"offset":165},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"These commands may require root rights, depending on your operating\nsystem and configuration.","position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":9,"column":26,"offset":260},"indent":[1]}}],"position":{"start":{"line":8,"column":1,"offset":167},"end":{"line":9,"column":26,"offset":260},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Quick start","position":{"start":{"line":11,"column":4,"offset":265},"end":{"line":11,"column":15,"offset":276},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":262},"end":{"line":11,"column":15,"offset":276},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Initialize BooGi project in current directory:","position":{"start":{"line":13,"column":4,"offset":281},"end":{"line":13,"column":50,"offset":327},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":281},"end":{"line":13,"column":50,"offset":327},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"boogi init","position":{"start":{"line":14,"column":4,"offset":331},"end":{"line":16,"column":7,"offset":359},"indent":[4,4]}},{"type":"paragraph","children":[{"type":"text","value":"Now wizard will guide you through core BooGi\nconfiguration.","position":{"start":{"line":17,"column":4,"offset":363},"end":{"line":18,"column":18,"offset":425},"indent":[4]}}],"position":{"start":{"line":17,"column":4,"offset":363},"end":{"line":18,"column":18,"offset":425},"indent":[4]}}],"position":{"start":{"line":13,"column":1,"offset":278},"end":{"line":19,"column":1,"offset":426},"indent":[1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Run your app in development mode with live reload","position":{"start":{"line":20,"column":4,"offset":430},"end":{"line":20,"column":53,"offset":479},"indent":[]}}],"position":{"start":{"line":20,"column":4,"offset":430},"end":{"line":20,"column":53,"offset":479},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"boogi develop","position":{"start":{"line":21,"column":4,"offset":483},"end":{"line":23,"column":7,"offset":514},"indent":[4,4]}},{"type":"paragraph","children":[{"type":"text","value":"You can access your app on ","position":{"start":{"line":24,"column":4,"offset":518},"end":{"line":24,"column":31,"offset":545},"indent":[]}},{"type":"inlineCode","value":"localhost:8000","position":{"start":{"line":24,"column":31,"offset":545},"end":{"line":24,"column":47,"offset":561},"indent":[]}},{"type":"text","value":". Any changes\napplied will be automatically applied on running\ndevelopment server.","position":{"start":{"line":24,"column":47,"offset":561},"end":{"line":26,"column":23,"offset":649},"indent":[4,4]}}],"position":{"start":{"line":24,"column":4,"offset":518},"end":{"line":26,"column":23,"offset":649},"indent":[4,4]}}],"position":{"start":{"line":20,"column":1,"offset":427},"end":{"line":27,"column":1,"offset":650},"indent":[1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Build you app package ready for deployment","position":{"start":{"line":28,"column":4,"offset":654},"end":{"line":28,"column":46,"offset":696},"indent":[]}}],"position":{"start":{"line":28,"column":4,"offset":654},"end":{"line":28,"column":46,"offset":696},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"boogi build","position":{"start":{"line":29,"column":4,"offset":700},"end":{"line":31,"column":7,"offset":729},"indent":[4,4]}},{"type":"paragraph","children":[{"type":"text","value":"Built package will be available in ","position":{"start":{"line":32,"column":4,"offset":733},"end":{"line":32,"column":39,"offset":768},"indent":[]}},{"type":"inlineCode","value":"public","position":{"start":{"line":32,"column":39,"offset":768},"end":{"line":32,"column":47,"offset":776},"indent":[]}},{"type":"text","value":" directory.","position":{"start":{"line":32,"column":47,"offset":776},"end":{"line":32,"column":58,"offset":787},"indent":[]}}],"position":{"start":{"line":32,"column":4,"offset":733},"end":{"line":32,"column":58,"offset":787},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":651},"end":{"line":32,"column":58,"offset":787},"indent":[1,1,1,1]}}],"position":{"start":{"line":13,"column":1,"offset":278},"end":{"line":32,"column":58,"offset":787},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"BooGi directory structure","position":{"start":{"line":34,"column":4,"offset":792},"end":{"line":34,"column":29,"offset":817},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":789},"end":{"line":34,"column":29,"offset":817},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Below is defined BooGi app directory structure.\n","position":{"start":{"line":36,"column":1,"offset":819},"end":{"line":37,"column":1,"offset":867},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Important","position":{"start":{"line":37,"column":3,"offset":869},"end":{"line":37,"column":12,"offset":878},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":867},"end":{"line":37,"column":14,"offset":880},"indent":[]}},{"type":"text","value":" This is applicable only for apps initialized and\nusing BooGi CLI.","position":{"start":{"line":37,"column":14,"offset":880},"end":{"line":38,"column":17,"offset":946},"indent":[1]}}],"position":{"start":{"line":36,"column":1,"offset":819},"end":{"line":38,"column":17,"offset":946},"indent":[1,1]}},{"type":"code","lang":"bash","meta":null,"value":"+-- .boogi.yml   # BooGi CLI configuration file\n+-- package.json # \n+-- README.md    # Your BooGi app readme\n│\n+-- assets/      # Directory with static assets not used inside content (e.g. logo)\n│\n+-- config/      # Directory with BooGi app configuration\n│   +-- config.yml  # BooGi configuration file\n│   +-- jargon.yml  # Jargon (abbrevations / definitions) configuration file\n│   +-- theme/      # Directory with BooGi app theme (look-and-feel) configuration\n│       +-- colors.js # Base colors configuration file\n│       +-- dark.js   # Dark theme configuration file\n│       +-- light.js  # Light theme configuration file\n│\n+-- content/     # Directory with your app content\n│   +-- index.md # Root page content file (do not remove!)\n│\n+-- snippets/ # Directory with external code snippets, which can be embedded in content","position":{"start":{"line":40,"column":1,"offset":948},"end":{"line":59,"column":4,"offset":1787},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Quick Start\",\"order\":3}","position":{"start":{"line":61,"column":1,"offset":1789},"end":{"line":61,"column":62,"offset":1850},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":61,"column":62,"offset":1850}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Quick Start\",\n  \"order\": 3\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Prerequisites\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install NodeJS (newest 14+ recommended, minimal 12.18).\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install Yarn: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm install -g yarn\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install Boogi CLI: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm install -g boogi-cli\"))), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"These commands may require root rights, depending on your operating\\nsystem and configuration.\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Quick start\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Initialize BooGi project in current directory:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"boogi init\\n\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Now wizard will guide you through core BooGi\\nconfiguration.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Run your app in development mode with live reload\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"boogi develop\\n\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You can access your app on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localhost:8000\"), \". Any changes\\napplied will be automatically applied on running\\ndevelopment server.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Build you app package ready for deployment\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"boogi build\\n\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Built package will be available in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"public\"), \" directory.\")))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"BooGi directory structure\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Below is defined BooGi app directory structure.\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Important\"), \" This is applicable only for apps initialized and\\nusing BooGi CLI.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"+-- .boogi.yml   # BooGi CLI configuration file\\n+-- package.json # \\n+-- README.md    # Your BooGi app readme\\n\\u2502\\n+-- assets/      # Directory with static assets not used inside content (e.g. logo)\\n\\u2502\\n+-- config/      # Directory with BooGi app configuration\\n\\u2502   +-- config.yml  # BooGi configuration file\\n\\u2502   +-- jargon.yml  # Jargon (abbrevations / definitions) configuration file\\n\\u2502   +-- theme/      # Directory with BooGi app theme (look-and-feel) configuration\\n\\u2502       +-- colors.js # Base colors configuration file\\n\\u2502       +-- dark.js   # Dark theme configuration file\\n\\u2502       +-- light.js  # Light theme configuration file\\n\\u2502\\n+-- content/     # Directory with your app content\\n\\u2502   +-- index.md # Root page content file (do not remove!)\\n\\u2502\\n+-- snippets/ # Directory with external code snippets, which can be embedded in content\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Quick Start\",\n  \"order\": 3\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <section><h2 parentName=\"section\">{`Prerequisites`}</h2><ol parentName=\"section\">\n        <li parentName=\"ol\">{`Install NodeJS (newest 14+ recommended, minimal 12.18).`}</li>\n        <li parentName=\"ol\">{`Install Yarn: `}<inlineCode parentName=\"li\">{`npm install -g yarn`}</inlineCode></li>\n        <li parentName=\"ol\">{`Install Boogi CLI: `}<inlineCode parentName=\"li\">{`npm install -g boogi-cli`}</inlineCode></li>\n      </ol><p parentName=\"section\">{`These commands may require root rights, depending on your operating\nsystem and configuration.`}</p></section>\n    <section><h2 parentName=\"section\">{`Quick start`}</h2><ol parentName=\"section\">\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Initialize BooGi project in current directory:`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-bash\"\n            }}>{`boogi init\n`}</code></pre>\n          <p parentName=\"li\">{`Now wizard will guide you through core BooGi\nconfiguration.`}</p>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Run your app in development mode with live reload`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-bash\"\n            }}>{`boogi develop\n`}</code></pre>\n          <p parentName=\"li\">{`You can access your app on `}<inlineCode parentName=\"p\">{`localhost:8000`}</inlineCode>{`. Any changes\napplied will be automatically applied on running\ndevelopment server.`}</p>\n        </li>\n        <li parentName=\"ol\">\n          <p parentName=\"li\">{`Build you app package ready for deployment`}</p>\n          <pre parentName=\"li\"><code parentName=\"pre\" {...{\n              \"className\": \"language-bash\"\n            }}>{`boogi build\n`}</code></pre>\n          <p parentName=\"li\">{`Built package will be available in `}<inlineCode parentName=\"p\">{`public`}</inlineCode>{` directory.`}</p>\n        </li>\n      </ol></section>\n    <section><h2 parentName=\"section\">{`BooGi directory structure`}</h2><p parentName=\"section\">{`Below is defined BooGi app directory structure.\n`}<strong parentName=\"p\">{`Important`}</strong>{` This is applicable only for apps initialized and\nusing BooGi CLI.`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n          \"className\": \"language-bash\"\n        }}>{`+-- .boogi.yml   # BooGi CLI configuration file\n+-- package.json # \n+-- README.md    # Your BooGi app readme\n│\n+-- assets/      # Directory with static assets not used inside content (e.g. logo)\n│\n+-- config/      # Directory with BooGi app configuration\n│   +-- config.yml  # BooGi configuration file\n│   +-- jargon.yml  # Jargon (abbrevations / definitions) configuration file\n│   +-- theme/      # Directory with BooGi app theme (look-and-feel) configuration\n│       +-- colors.js # Base colors configuration file\n│       +-- dark.js   # Dark theme configuration file\n│       +-- light.js  # Light theme configuration file\n│\n+-- content/     # Directory with your app content\n│   +-- index.md # Root page content file (do not remove!)\n│\n+-- snippets/ # Directory with external code snippets, which can be embedded in content\n`}</code></pre></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}