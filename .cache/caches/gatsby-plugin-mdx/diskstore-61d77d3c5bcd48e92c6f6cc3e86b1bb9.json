{"expireTime":9007200878668034000,"key":"gatsby-plugin-mdx-entire-payload-53719bccf856152c850e26552a10bd61-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"BooGi offers creating inline definitions of \npopular jargon used. This is a good way to define abbreviations / terms\nused in your company / area / profession.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":4,"column":42,"offset":159},"indent":[1,1]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":4,"column":42,"offset":159},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"First define your jargon / definitions in ","position":{"start":{"line":6,"column":1,"offset":161},"end":{"line":6,"column":43,"offset":203},"indent":[]}},{"type":"inlineCode","value":"jargon.yml","position":{"start":{"line":6,"column":43,"offset":203},"end":{"line":6,"column":55,"offset":215},"indent":[]}},{"type":"text","value":" in ","position":{"start":{"line":6,"column":55,"offset":215},"end":{"line":6,"column":59,"offset":219},"indent":[]}},{"type":"inlineCode","value":"config","position":{"start":{"line":6,"column":59,"offset":219},"end":{"line":6,"column":67,"offset":227},"indent":[]}},{"type":"text","value":"\ndirectory.","position":{"start":{"line":6,"column":67,"offset":227},"end":{"line":7,"column":11,"offset":238},"indent":[1]}}],"position":{"start":{"line":6,"column":1,"offset":161},"end":{"line":7,"column":11,"offset":238},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Configuration","position":{"start":{"line":9,"column":4,"offset":243},"end":{"line":9,"column":17,"offset":256},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":240},"end":{"line":9,"column":17,"offset":256},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Format of yaml file is following:","position":{"start":{"line":11,"column":1,"offset":258},"end":{"line":11,"column":34,"offset":291},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":258},"end":{"line":11,"column":34,"offset":291},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"<term_key>: # key by which term can be referenced in the page content to embed jargon\n  name: String # required name of term\n  long_name: String # optional, long name of term\n  description: String # optional, term description","position":{"start":{"line":13,"column":1,"offset":293},"end":{"line":18,"column":4,"offset":530},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":20,"column":3,"offset":534},"end":{"line":20,"column":11,"offset":542},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":532},"end":{"line":20,"column":13,"offset":544},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":532},"end":{"line":20,"column":13,"offset":544},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"jargon.yml","position":{"start":{"line":22,"column":1,"offset":546},"end":{"line":22,"column":13,"offset":558},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":546},"end":{"line":22,"column":13,"offset":558},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"saas:\n  name: SaaS\n  long_name: Software as a Service\n  description: Software licensing and delivery model in which software is licensed\n    on a subscription basis and is centrally hosted and managed\nboogi:\n  name: BooGi\n  description: The best documentation tool in the space! Check it <a href=\"https://boogi.netlify.app\">here</a>.","position":{"start":{"line":23,"column":1,"offset":559},"end":{"line":32,"column":4,"offset":904},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<Warning>When under development mode, you must restart BooGi to apply new jargon configuration.</Warning>","position":{"start":{"line":34,"column":1,"offset":906},"end":{"line":34,"column":106,"offset":1011},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Usage","position":{"start":{"line":36,"column":4,"offset":1016},"end":{"line":36,"column":9,"offset":1021},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1013},"end":{"line":36,"column":9,"offset":1021},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Then in markdown wrap word defined as key (","position":{"start":{"line":38,"column":1,"offset":1023},"end":{"line":38,"column":44,"offset":1066},"indent":[]}},{"type":"inlineCode","value":"term_key","position":{"start":{"line":38,"column":44,"offset":1066},"end":{"line":38,"column":54,"offset":1076},"indent":[]}},{"type":"text","value":") above in ","position":{"start":{"line":38,"column":54,"offset":1076},"end":{"line":38,"column":65,"offset":1087},"indent":[]}},{"type":"inlineCode","value":"_","position":{"start":{"line":38,"column":65,"offset":1087},"end":{"line":38,"column":68,"offset":1090},"indent":[]}},{"type":"text","value":" to use Jargon\n(key is case-insensitive, thus ","position":{"start":{"line":38,"column":68,"offset":1090},"end":{"line":39,"column":32,"offset":1136},"indent":[1]}},{"type":"inlineCode","value":"term_key","position":{"start":{"line":39,"column":32,"offset":1136},"end":{"line":39,"column":42,"offset":1146},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":39,"column":42,"offset":1146},"end":{"line":39,"column":46,"offset":1150},"indent":[]}},{"type":"inlineCode","value":"TERM_key","position":{"start":{"line":39,"column":46,"offset":1150},"end":{"line":39,"column":56,"offset":1160},"indent":[]}},{"type":"text","value":" reference same term).","position":{"start":{"line":39,"column":56,"offset":1160},"end":{"line":39,"column":78,"offset":1182},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1023},"end":{"line":39,"column":78,"offset":1182},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example","position":{"start":{"line":41,"column":3,"offset":1186},"end":{"line":41,"column":10,"offset":1193},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1184},"end":{"line":41,"column":12,"offset":1195},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1184},"end":{"line":41,"column":12,"offset":1195},"indent":[]}},{"type":"code","lang":"markdown","meta":null,"value":"You can use any _saas_ application.\n\nTry _BooGi_ -- you'll love it :heart: !","position":{"start":{"line":43,"column":1,"offset":1197},"end":{"line":47,"column":6,"offset":1291},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can use any ","position":{"start":{"line":49,"column":1,"offset":1293},"end":{"line":49,"column":17,"offset":1309},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"saas","position":{"start":{"line":49,"column":18,"offset":1310},"end":{"line":49,"column":22,"offset":1314},"indent":[]}}],"position":{"start":{"line":49,"column":17,"offset":1309},"end":{"line":49,"column":23,"offset":1315},"indent":[]}},{"type":"text","value":" application.","position":{"start":{"line":49,"column":23,"offset":1315},"end":{"line":49,"column":36,"offset":1328},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1293},"end":{"line":49,"column":36,"offset":1328},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Try ","position":{"start":{"line":51,"column":1,"offset":1330},"end":{"line":51,"column":5,"offset":1334},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"BooGi","position":{"start":{"line":51,"column":6,"offset":1335},"end":{"line":51,"column":11,"offset":1340},"indent":[]}}],"position":{"start":{"line":51,"column":5,"offset":1334},"end":{"line":51,"column":12,"offset":1341},"indent":[]}},{"type":"text","value":" -- you'll love it :heart: !","position":{"start":{"line":51,"column":12,"offset":1341},"end":{"line":51,"column":40,"offset":1369},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1330},"end":{"line":51,"column":40,"offset":1369},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Abbreviations\",\"order\":2}","position":{"start":{"line":53,"column":1,"offset":1371},"end":{"line":53,"column":64,"offset":1434},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":53,"column":64,"offset":1434}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Abbreviations\",\n  \"order\": 2\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Warning = makeShortcode(\"Warning\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"BooGi offers creating inline definitions of\\npopular jargon used. This is a good way to define abbreviations / terms\\nused in your company / area / profession.\"), mdx(\"p\", null, \"First define your jargon / definitions in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jargon.yml\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"config\"), \"\\ndirectory.\"), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Configuration\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Format of yaml file is following:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"<term_key>: # key by which term can be referenced in the page content to embed jargon\\n  name: String # required name of term\\n  long_name: String # optional, long name of term\\n  description: String # optional, term description\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jargon.yml\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"saas:\\n  name: SaaS\\n  long_name: Software as a Service\\n  description: Software licensing and delivery model in which software is licensed\\n    on a subscription basis and is centrally hosted and managed\\nboogi:\\n  name: BooGi\\n  description: The best documentation tool in the space! Check it <a href=\\\"https://boogi.netlify.app\\\">here</a>.\\n\")), mdx(Warning, {\n    mdxType: \"Warning\"\n  }, \"When under development mode, you must restart BooGi to apply new jargon configuration.\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Usage\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Then in markdown wrap word defined as key (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"term_key\"), \") above in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_\"), \" to use Jargon\\n(key is case-insensitive, thus \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"term_key\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TERM_key\"), \" reference same term).\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-markdown\"\n  }), \"You can use any _saas_ application.\\n\\nTry _BooGi_ -- you'll love it :heart: !\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can use any \", mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"span\", _extends({\n    parentName: \"em\"\n  }, {\n    \"className\": \"jargon-term\"\n  }), \"saas\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"jargon-info\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }, mdx(\"b\", {\n    parentName: \"span\"\n  }, \"SaaS\"), \" - Software as a Service\"), \" Software licensing and delivery model in which software is licensed on a subscription basis and is centrally hosted and managed\"))), \" application.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Try \", mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"span\", _extends({\n    parentName: \"em\"\n  }, {\n    \"className\": \"jargon-term\"\n  }), \"BooGi\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"jargon-info\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }, mdx(\"b\", {\n    parentName: \"span\"\n  }, \"BooGi\")), \" T lulzhe best documentation tool in the space! Check it \", mdx(\"a\", _extends({\n    parentName: \"span\"\n  }, {\n    \"href\": \"https://boogi.netlify.app\"\n  }), \"here\"), \".\"))), \" -- you'll love it \\u2764\\uFE0F !\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Abbreviations\",\n  \"order\": 2\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Warning = makeShortcode(\"Warning\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`BooGi offers creating inline definitions of\npopular jargon used. This is a good way to define abbreviations / terms\nused in your company / area / profession.`}</p>\n    <p>{`First define your jargon / definitions in `}<inlineCode parentName=\"p\">{`jargon.yml`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{`\ndirectory.`}</p>\n    <section><h2 parentName=\"section\">{`Configuration`}</h2><p parentName=\"section\">{`Format of yaml file is following:`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n          \"className\": \"language-yaml\"\n        }}>{`<term_key>: # key by which term can be referenced in the page content to embed jargon\n  name: String # required name of term\n  long_name: String # optional, long name of term\n  description: String # optional, term description\n`}</code></pre><p parentName=\"section\"><strong parentName=\"p\">{`Example:`}</strong></p><p parentName=\"section\"><inlineCode parentName=\"p\">{`jargon.yml`}</inlineCode></p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n          \"className\": \"language-yaml\"\n        }}>{`saas:\n  name: SaaS\n  long_name: Software as a Service\n  description: Software licensing and delivery model in which software is licensed\n    on a subscription basis and is centrally hosted and managed\nboogi:\n  name: BooGi\n  description: The best documentation tool in the space! Check it <a href=\"https://boogi.netlify.app\">here</a>.\n`}</code></pre><Warning mdxType=\"Warning\">When under development mode, you must restart BooGi to apply new jargon configuration.</Warning></section>\n    <section><h2 parentName=\"section\">{`Usage`}</h2><p parentName=\"section\">{`Then in markdown wrap word defined as key (`}<inlineCode parentName=\"p\">{`term_key`}</inlineCode>{`) above in `}<inlineCode parentName=\"p\">{`_`}</inlineCode>{` to use Jargon\n(key is case-insensitive, thus `}<inlineCode parentName=\"p\">{`term_key`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`TERM_key`}</inlineCode>{` reference same term).`}</p><p parentName=\"section\"><strong parentName=\"p\">{`Example`}</strong></p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n          \"className\": \"language-markdown\"\n        }}>{`You can use any _saas_ application.\n\nTry _BooGi_ -- you'll love it :heart: !\n`}</code></pre><p parentName=\"section\">{`You can use any `}<em parentName=\"p\"><span parentName=\"em\" {...{\n            \"className\": \"jargon-term\"\n          }}>{`saas`}<span parentName=\"span\" {...{\n              \"className\": \"jargon-info\"\n            }}><span parentName=\"span\"><b parentName=\"span\">{`SaaS`}</b>{` - Software as a Service`}</span>{` Software licensing and delivery model in which software is licensed on a subscription basis and is centrally hosted and managed`}</span></span></em>{` application.`}</p><p parentName=\"section\">{`Try `}<em parentName=\"p\"><span parentName=\"em\" {...{\n            \"className\": \"jargon-term\"\n          }}>{`BooGi`}<span parentName=\"span\" {...{\n              \"className\": \"jargon-info\"\n            }}><span parentName=\"span\"><b parentName=\"span\">{`BooGi`}</b></span>{` T lulzhe best documentation tool in the space! Check it `}<a parentName=\"span\" {...{\n                \"href\": \"https://boogi.netlify.app\"\n              }}>{`here`}</a>{`.`}</span></span></em>{` -- you'll love it ❤️ !`}</p></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}