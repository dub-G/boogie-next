{"expireTime":9007200878668035000,"key":"gatsby-plugin-mdx-entire-payload-8acea374c07a0a8f6c7c72457e507603-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Themes is a way to customize BooGi app to meet your branding \nand desired look-and-feel. You can change color of nearly ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":3,"column":59,"offset":121},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"every","position":{"start":{"line":3,"column":61,"offset":123},"end":{"line":3,"column":66,"offset":128},"indent":[]}}],"position":{"start":{"line":3,"column":59,"offset":121},"end":{"line":3,"column":68,"offset":130},"indent":[]}},{"type":"text","value":"\ncomponent on the page.","position":{"start":{"line":3,"column":68,"offset":130},"end":{"line":4,"column":23,"offset":153},"indent":[1]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":4,"column":23,"offset":153},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"BooGi offers two themes: light and dark. By both themes are used.\nTo disable dark mode, set ","position":{"start":{"line":6,"column":1,"offset":155},"end":{"line":7,"column":27,"offset":247},"indent":[1]}},{"type":"inlineCode","value":"features.darkMode.enabled=false","position":{"start":{"line":7,"column":27,"offset":247},"end":{"line":7,"column":60,"offset":280},"indent":[]}},{"type":"text","value":"\nin ","position":{"start":{"line":7,"column":60,"offset":280},"end":{"line":8,"column":4,"offset":284},"indent":[1]}},{"type":"inlineCode","value":"config.yml","position":{"start":{"line":8,"column":4,"offset":284},"end":{"line":8,"column":16,"offset":296},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":8,"column":16,"offset":296},"end":{"line":8,"column":17,"offset":297},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":155},"end":{"line":8,"column":17,"offset":297},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Theme configuration is stored in ","position":{"start":{"line":10,"column":1,"offset":299},"end":{"line":10,"column":34,"offset":332},"indent":[]}},{"type":"inlineCode","value":"light.js","position":{"start":{"line":10,"column":34,"offset":332},"end":{"line":10,"column":44,"offset":342},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":10,"column":44,"offset":342},"end":{"line":10,"column":49,"offset":347},"indent":[]}},{"type":"inlineCode","value":"dark.js","position":{"start":{"line":10,"column":49,"offset":347},"end":{"line":10,"column":58,"offset":356},"indent":[]}},{"type":"text","value":" files\nfor light and dark theme respectively. Additionally, BooGi\noffers a way to change basic colors used on the site. Default colors\ndefinition is stored in ","position":{"start":{"line":10,"column":58,"offset":356},"end":{"line":13,"column":25,"offset":515},"indent":[1,1,1]}},{"type":"inlineCode","value":"colors.js","position":{"start":{"line":13,"column":25,"offset":515},"end":{"line":13,"column":36,"offset":526},"indent":[]}},{"type":"text","value":" file. All these files are in\n","position":{"start":{"line":13,"column":36,"offset":526},"end":{"line":14,"column":1,"offset":556},"indent":[1]}},{"type":"inlineCode","value":"config/theme","position":{"start":{"line":14,"column":1,"offset":556},"end":{"line":14,"column":15,"offset":570},"indent":[]}},{"type":"text","value":" directory of your BooGi app.","position":{"start":{"line":14,"column":15,"offset":570},"end":{"line":14,"column":44,"offset":599},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":299},"end":{"line":14,"column":44,"offset":599},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Understanding theme setup","position":{"start":{"line":16,"column":4,"offset":604},"end":{"line":16,"column":29,"offset":629},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":601},"end":{"line":16,"column":29,"offset":629},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When using BooGi CLI, by default ","position":{"start":{"line":18,"column":1,"offset":631},"end":{"line":18,"column":34,"offset":664},"indent":[]}},{"type":"link","title":null,"url":"#minimal","children":[{"type":"text","value":"minimal","position":{"start":{"line":18,"column":35,"offset":665},"end":{"line":18,"column":42,"offset":672},"indent":[]}}],"position":{"start":{"line":18,"column":34,"offset":664},"end":{"line":18,"column":53,"offset":683},"indent":[]}},{"type":"text","value":" minimal configuration\nwill be present in configuration files.","position":{"start":{"line":18,"column":53,"offset":683},"end":{"line":19,"column":40,"offset":745},"indent":[1]}}],"position":{"start":{"line":18,"column":1,"offset":631},"end":{"line":19,"column":40,"offset":745},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"You can use any CSS-compatible color format: HEX, RGB, RGBA, HSL, HSLA.","position":{"start":{"line":21,"column":1,"offset":747},"end":{"line":21,"column":72,"offset":818},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":747},"end":{"line":21,"column":72,"offset":818},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Base colors (red, green, blue etc..) are defined in ","position":{"start":{"line":23,"column":1,"offset":820},"end":{"line":23,"column":53,"offset":872},"indent":[]}},{"type":"inlineCode","value":"colors.js","position":{"start":{"line":23,"column":53,"offset":872},"end":{"line":23,"column":64,"offset":883},"indent":[]}},{"type":"text","value":" library.\nYou can quickly change basic colors used.","position":{"start":{"line":23,"column":64,"offset":883},"end":{"line":24,"column":42,"offset":934},"indent":[1]}}],"position":{"start":{"line":23,"column":1,"offset":820},"end":{"line":24,"column":42,"offset":934},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Theme is split into certain page objects like header, sidebar, search,\ncontent etc. Each consists of dedicated set of theme properties.\nFor full list of properties check ","position":{"start":{"line":28,"column":1,"offset":938},"end":{"line":30,"column":35,"offset":1108},"indent":[1,1]}},{"type":"link","title":null,"url":"#full","children":[{"type":"text","value":"full","position":{"start":{"line":30,"column":36,"offset":1109},"end":{"line":30,"column":40,"offset":1113},"indent":[]}}],"position":{"start":{"line":30,"column":35,"offset":1108},"end":{"line":30,"column":48,"offset":1121},"indent":[]}},{"type":"text","value":" configuration\nreference.","position":{"start":{"line":30,"column":48,"offset":1121},"end":{"line":31,"column":11,"offset":1146},"indent":[1]}}],"position":{"start":{"line":28,"column":1,"offset":938},"end":{"line":31,"column":11,"offset":1146},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you don't want go deep into each object configuration, you can\napply minimal configuratin to customize BooGi app to your needs.\nCheck ","position":{"start":{"line":33,"column":1,"offset":1148},"end":{"line":35,"column":7,"offset":1285},"indent":[1,1]}},{"type":"link","title":null,"url":"#minimal","children":[{"type":"text","value":"minimal configuration reference","position":{"start":{"line":35,"column":8,"offset":1286},"end":{"line":35,"column":39,"offset":1317},"indent":[]}}],"position":{"start":{"line":35,"column":7,"offset":1285},"end":{"line":35,"column":50,"offset":1328},"indent":[]}},{"type":"text","value":" for an example.","position":{"start":{"line":35,"column":50,"offset":1328},"end":{"line":35,"column":66,"offset":1344},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1148},"end":{"line":35,"column":66,"offset":1344},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can change any single parameter -- there is no need to change whole \nconfiguration of any object. The defaults will be applied to the rest.\nFor instance, if you want to override header background color,\nyou can just define:","position":{"start":{"line":37,"column":1,"offset":1346},"end":{"line":40,"column":21,"offset":1573},"indent":[1,1,1]}}],"position":{"start":{"line":37,"column":1,"offset":1346},"end":{"line":40,"column":21,"offset":1573},"indent":[1,1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"const header = (colors) => ({\n  background: '#3a4b5c'\n});","position":{"start":{"line":42,"column":1,"offset":1575},"end":{"line":46,"column":4,"offset":1650},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Each object defined in the theme should receive ","position":{"start":{"line":48,"column":1,"offset":1652},"end":{"line":48,"column":49,"offset":1700},"indent":[]}},{"type":"inlineCode","value":"colors","position":{"start":{"line":48,"column":49,"offset":1700},"end":{"line":48,"column":57,"offset":1708},"indent":[]}},{"type":"text","value":" parameter, which is \nan object of base colors, defined in the same file as ","position":{"start":{"line":48,"column":57,"offset":1708},"end":{"line":49,"column":55,"offset":1784},"indent":[1]}},{"type":"inlineCode","value":"colors","position":{"start":{"line":49,"column":55,"offset":1784},"end":{"line":49,"column":63,"offset":1792},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":49,"column":63,"offset":1792},"end":{"line":49,"column":65,"offset":1794},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1652},"end":{"line":49,"column":65,"offset":1794},"indent":[1]}},{"type":"jsx","value":"<Info>Remember to define each object as a function with colors parameter!</Info>","position":{"start":{"line":51,"column":1,"offset":1796},"end":{"line":51,"column":81,"offset":1876},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Using color library","position":{"start":{"line":53,"column":5,"offset":1882},"end":{"line":53,"column":24,"offset":1901},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1878},"end":{"line":53,"column":24,"offset":1901},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"BooGi uses ","position":{"start":{"line":55,"column":1,"offset":1903},"end":{"line":55,"column":12,"offset":1914},"indent":[]}},{"type":"inlineCode","value":"color","position":{"start":{"line":55,"column":12,"offset":1914},"end":{"line":55,"column":19,"offset":1921},"indent":[]}},{"type":"text","value":" - a JavaScript library for immutable color conversion \nand manipulation with support for CSS color strings. It uses it to automatically\ncalculate values of some properties based on the default colors used. Thanks to it\nyou don't need to care about each single color on the page -- BooGi will do it for you.\nCheck ","position":{"start":{"line":55,"column":19,"offset":1921},"end":{"line":59,"column":7,"offset":2235},"indent":[1,1,1,1]}},{"type":"link","title":null,"url":"https://github.com/Qix-/color","children":[{"type":"text","value":"this site","position":{"start":{"line":59,"column":8,"offset":2236},"end":{"line":59,"column":17,"offset":2245},"indent":[]}}],"position":{"start":{"line":59,"column":7,"offset":2235},"end":{"line":59,"column":49,"offset":2277},"indent":[]}},{"type":"text","value":" for details about ","position":{"start":{"line":59,"column":49,"offset":2277},"end":{"line":59,"column":68,"offset":2296},"indent":[]}},{"type":"inlineCode","value":"color","position":{"start":{"line":59,"column":68,"offset":2296},"end":{"line":59,"column":75,"offset":2303},"indent":[]}},{"type":"text","value":" library.","position":{"start":{"line":59,"column":75,"offset":2303},"end":{"line":59,"column":84,"offset":2312},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1903},"end":{"line":59,"column":84,"offset":2312},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can use ","position":{"start":{"line":61,"column":1,"offset":2314},"end":{"line":61,"column":13,"offset":2326},"indent":[]}},{"type":"inlineCode","value":"color","position":{"start":{"line":61,"column":13,"offset":2326},"end":{"line":61,"column":20,"offset":2333},"indent":[]}},{"type":"text","value":" library in your theme definition. For example:","position":{"start":{"line":61,"column":20,"offset":2333},"end":{"line":61,"column":67,"offset":2380},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":2314},"end":{"line":61,"column":67,"offset":2380},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"import colorfn from 'color';\n\nconst search = (colors) => ({\n  background: colorfn(colors.background).darken(1.3).rgb().string(),\n  pagination: {\n    current: {\n      font: colorfn(colors.primary).negate().grayscale().hex(),\n    },\n  },\n});","position":{"start":{"line":63,"column":1,"offset":2382},"end":{"line":74,"column":4,"offset":2639},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Minimal","position":{"start":{"line":76,"column":4,"offset":2644},"end":{"line":76,"column":11,"offset":2651},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":2641},"end":{"line":76,"column":11,"offset":2651},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Minimal configuration can be used to quickly customize theme to your needs.\nYou can change here basic colors, which are then referenced (used) in other\npage objects.","position":{"start":{"line":78,"column":1,"offset":2653},"end":{"line":80,"column":14,"offset":2818},"indent":[1,1]}}],"position":{"start":{"line":78,"column":1,"offset":2653},"end":{"line":80,"column":14,"offset":2818},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"colors","position":{"start":{"line":82,"column":1,"offset":2820},"end":{"line":82,"column":9,"offset":2828},"indent":[]}},{"type":"text","value":" object is the most important one when it comes to defining the theme --\nall other objects use its fields to properly set up colors (you can alter\nthis behavior, see ","position":{"start":{"line":82,"column":9,"offset":2828},"end":{"line":84,"column":20,"offset":2994},"indent":[1,1]}},{"type":"link","title":null,"url":"#full","children":[{"type":"text","value":"full configuration","position":{"start":{"line":84,"column":21,"offset":2995},"end":{"line":84,"column":39,"offset":3013},"indent":[]}}],"position":{"start":{"line":84,"column":20,"offset":2994},"end":{"line":84,"column":47,"offset":3021},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":84,"column":47,"offset":3021},"end":{"line":84,"column":49,"offset":3023},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":2820},"end":{"line":84,"column":49,"offset":3023},"indent":[1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"import defaultColors from './colors';\n\nconst colors = {\n  ...defaultColors,\n\n  primary: defaultColors.red,\n  primaryDark: defaultColors.blueDark,\n  font: '#dddddd',\n  fontDark: '#8a8a8a',\n  background: '#29282A',\n  mainBackground: '#1E1E1F',\n  border: '#323234',\n  hover: defaultColors.red,\n  shadow: defaultColors.gray + '33',\n};\n\nexport default {\n  colors: colors,\n};","position":{"start":{"line":86,"column":1,"offset":3025},"end":{"line":106,"column":4,"offset":3412},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Full","position":{"start":{"line":108,"column":4,"offset":3417},"end":{"line":108,"column":8,"offset":3421},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3414},"end":{"line":108,"column":8,"offset":3421},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Reference below presents full theme configuration for all fields.\nIt contains also example of using ","position":{"start":{"line":110,"column":1,"offset":3423},"end":{"line":111,"column":35,"offset":3523},"indent":[1]}},{"type":"inlineCode","value":"color","position":{"start":{"line":111,"column":35,"offset":3523},"end":{"line":111,"column":42,"offset":3530},"indent":[]}},{"type":"text","value":" library.\nIf you're interested in actual BooGi base configuration, check\n","position":{"start":{"line":111,"column":42,"offset":3530},"end":{"line":113,"column":1,"offset":3603},"indent":[1,1]}},{"type":"link","title":null,"url":"https://github.com/filipowm/BooGi/blob/develop/src/theme/base.js","children":[{"type":"text","value":"https://github.com/filipowm/BooGi/blob/develop/src/theme/base.js","position":{"start":{"line":113,"column":1,"offset":3603},"end":{"line":113,"column":65,"offset":3667},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":3603},"end":{"line":113,"column":65,"offset":3667},"indent":[]}},{"type":"text","value":" .\nIt contains full definition of the default light theme.","position":{"start":{"line":113,"column":65,"offset":3667},"end":{"line":114,"column":56,"offset":3725},"indent":[1]}}],"position":{"start":{"line":110,"column":1,"offset":3423},"end":{"line":114,"column":56,"offset":3725},"indent":[1,1,1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"import defaultColors from './colors';\nimport colorfn from 'color';\n\nconst colors = {\n  ...defaultColors,\n\n  primary: defaultColors.red,\n  primaryDark: defaultColors.blueDark,\n  fontLight: '#efefef',\n  font: '#dddddd',\n  fontDark: '#8a8a8a',\n  background: '#29282A',\n  mainBackground: '#1E1E1F',\n  border: '#323234',\n  hover: defaultColors.red,\n  shadow: defaultColors.gray + '33',\n};\n\nconst pageLayout = {\n  leftWidth: '318px',\n  leftMargin: '30px',\n  rightWidth: '',\n  rightMargin: '',\n};\n\nconst transitions = {\n  hover: 'all .5s cubic-bezier(0.25, 0.8, 0.25, 1) 0s',\n  hoverFast: 'all .3s cubic-bezier(0.25, 0.8, 0.25, 1) 0s',\n  hoverColor: 'color .5s cubic-bezier(0.25, 0.8, 0.25, 1) 0s',\n};\n\nconst content = (colors) => ({\n  background: colors.mainBackground,\n  border: colors.border,\n  font: colors.font,\n  titleFont: colors.font,\n  code: {\n    border: colors.border,\n    font: colors.fontDark,\n    background: colors.background,\n  },\n});\n\nconst navigationSidebar = (colors) => ({\n  backgroundSecondary: colors.background,\n  backgroundPrimary: colors.background,\n  border: colors.border,\n  row: {\n    hover: colors.border,\n    active: colorfn(colors.white).mix(colorfn(colors.background)).whiten(3.5).hex(),\n    activeBorder: colors.border,\n    collapseHover: colors.hover,\n  },\n  font: {\n    group: colorfn(colors.font).darken(0.2).hex(),\n    base: colors.font,\n    nested: colorfn(colors.font).lightn(1.2).hex(),\n    active: colors.primary,\n    hover: colors.primary,\n  },\n  poweredBy: {\n    font: colors.grayLight,\n    background: colors.border,\n    hover: colors.primary,\n  },\n});\n\nconst header = (colors) => ({\n  background: colors.background,\n  shadow: colors.shadow,\n  font: {\n    base: colors.primary,\n    hover: colorfn(colors.primary).negate().hex(),\n  },\n  border: colors.border,\n  icons: {\n    background: colors.background,\n    shadow: colors.shadow,\n    fill: colors.primary,\n    stroke: colors.primary,\n    hover: colors.primary,\n  },\n});\n\nconst search = (colors) => ({\n  background: colors.background,\n  mark: {\n    font: colors.font,\n    background: colors.primary,\n  },\n  font: {\n    base: colors.font,\n    hover: colors.font,\n    highlight: colors.fontDark,\n  },\n  hover: colors.border,\n  border: colors.border,\n  pagination: {\n    background: colors.mainBackground,\n    border: colors.border,\n    font: colors.font,\n    hover: colors.border,\n    current: {\n      background: colors.primary,\n      font: colorfn(colors.primary).negate().grayscale().hex(),\n    },\n  },\n});\n\nconst editOnRepo = (colors) => ({\n  background: colors.background,\n  border: colors.border,\n  hover: colors.hover,\n  font: {\n    base: colors.font,\n    hover: colorfn(colors.primary).negate().grayscale().hex(),\n  },\n});\n\nconst jargon = (colors) => ({\n  background: colors.background,\n  border: colors.border,\n  font: colors.font,\n  shadow: colors.shadow,\n});\n\nconst highlights = (colors) => ({\n  warning: {\n    border: colors.orange,\n    background: colors.orangeLight,\n    font: colors.fontDark,\n  },\n  error: {\n    border: colors.red,\n    background: colors.redLight,\n    font: colors.fontDark,\n  },\n  info: {\n    border: colors.blue,\n    background: colors.blueLight,\n    font: colors.fontDark,\n  },\n  tip: {\n    border: colors.green,\n    background: colors.greenLight,\n    font: colors.fontDark,\n  },\n});\n\nconst table = (colors) => ({\n  header: {\n    background: colors.primary,\n    font: colorfn(colors.primary).negate().grayscale().lighten(0.2).hex(),\n  },\n  oddRow: colors.mainBackground,\n  evenRow: colors.background,\n  rowHover: colors.hover + '3d',\n  border: colors.border,\n});\n\nconst tableOfContents = (colors) => ({\n  background: colors.mainBackground,\n  font: {\n    base: colors.font,\n    hover: colors.primary,\n    current: colors.primary,\n  },\n  border: colors.border,\n});\n\nconst previousNext = (colors) => ({\n  background: colors.mainBackground,\n  hover: colors.primary,\n  font: colors.font,\n  fontLabel: colors.font,\n  border: colors.border,\n  shadow: colors.shadow,\n});\n\nconst scrollTop = (colors) => ({\n  background: colors.primary,\n  hover: colorfn(colors.primary).darken(0.4).hex(),\n  arrow: colorfn(colors.primary).negate().grayscale().lighten(0.4).rgb().string(),\n});\n\nexport default {\n  colors: colors,\n  layout: pageLayout,\n  transitions: transitions,\n  header: header,\n  search: search,\n  navigationSidebar: navigationSidebar,\n  content: content,\n  editOnRepo: editOnRepo,\n  jargon: jargon,\n  highlights: highlights,\n  table: table,\n  tableOfContents: tableOfContents,\n  previousNext: previousNext,\n  scrollTop: scrollTop,\n};","position":{"start":{"line":116,"column":1,"offset":3727},"end":{"line":318,"column":4,"offset":8293},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Themes / styling\",\"order\":3}","position":{"start":{"line":320,"column":1,"offset":8295},"end":{"line":320,"column":67,"offset":8361},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":320,"column":67,"offset":8361}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Themes / styling\",\n  \"order\": 3\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Info = makeShortcode(\"Info\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Themes is a way to customize BooGi app to meet your branding\\nand desired look-and-feel. You can change color of nearly \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"every\"), \"\\ncomponent on the page.\"), mdx(\"p\", null, \"BooGi offers two themes: light and dark. By both themes are used.\\nTo disable dark mode, set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"features.darkMode.enabled=false\"), \"\\nin \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"config.yml\"), \".\"), mdx(\"p\", null, \"Theme configuration is stored in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"light.js\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dark.js\"), \" files\\nfor light and dark theme respectively. Additionally, BooGi\\noffers a way to change basic colors used on the site. Default colors\\ndefinition is stored in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"colors.js\"), \" file. All these files are in\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"config/theme\"), \" directory of your BooGi app.\"), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Understanding theme setup\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"When using BooGi CLI, by default \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#minimal\"\n  }), \"minimal\"), \" minimal configuration\\nwill be present in configuration files.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can use any CSS-compatible color format: HEX, RGB, RGBA, HSL, HSLA.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Base colors (red, green, blue etc..) are defined in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"colors.js\"), \" library.\\nYou can quickly change basic colors used.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Theme is split into certain page objects like header, sidebar, search,\\ncontent etc. Each consists of dedicated set of theme properties.\\nFor full list of properties check \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#full\"\n  }), \"full\"), \" configuration\\nreference.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"If you don't want go deep into each object configuration, you can\\napply minimal configuratin to customize BooGi app to your needs.\\nCheck \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#minimal\"\n  }), \"minimal configuration reference\"), \" for an example.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can change any single parameter -- there is no need to change whole\\nconfiguration of any object. The defaults will be applied to the rest.\\nFor instance, if you want to override header background color,\\nyou can just define:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const header = (colors) => ({\\n  background: '#3a4b5c'\\n});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Each object defined in the theme should receive \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"colors\"), \" parameter, which is\\nan object of base colors, defined in the same file as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"colors\"), \". \"), mdx(Info, {\n    mdxType: \"Info\"\n  }, \"Remember to define each object as a function with colors parameter!\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Using color library\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"BooGi uses \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \" - a JavaScript library for immutable color conversion\\nand manipulation with support for CSS color strings. It uses it to automatically\\ncalculate values of some properties based on the default colors used. Thanks to it\\nyou don't need to care about each single color on the page -- BooGi will do it for you.\\nCheck \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Qix-/color\"\n  }), \"this site\"), \" for details about \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \" library.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \" library in your theme definition. For example:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import colorfn from 'color';\\n\\nconst search = (colors) => ({\\n  background: colorfn(colors.background).darken(1.3).rgb().string(),\\n  pagination: {\\n    current: {\\n      font: colorfn(colors.primary).negate().grayscale().hex(),\\n    },\\n  },\\n});\\n\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Minimal\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Minimal configuration can be used to quickly customize theme to your needs.\\nYou can change here basic colors, which are then referenced (used) in other\\npage objects.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"colors\"), \" object is the most important one when it comes to defining the theme --\\nall other objects use its fields to properly set up colors (you can alter\\nthis behavior, see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#full\"\n  }), \"full configuration\"), \").\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import defaultColors from './colors';\\n\\nconst colors = {\\n  ...defaultColors,\\n\\n  primary: defaultColors.red,\\n  primaryDark: defaultColors.blueDark,\\n  font: '#dddddd',\\n  fontDark: '#8a8a8a',\\n  background: '#29282A',\\n  mainBackground: '#1E1E1F',\\n  border: '#323234',\\n  hover: defaultColors.red,\\n  shadow: defaultColors.gray + '33',\\n};\\n\\nexport default {\\n  colors: colors,\\n};\\n\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Full\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Reference below presents full theme configuration for all fields.\\nIt contains also example of using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \" library.\\nIf you're interested in actual BooGi base configuration, check\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/filipowm/BooGi/blob/develop/src/theme/base.js\"\n  }), \"https://github.com/filipowm/BooGi/blob/develop/src/theme/base.js\"), \" .\\nIt contains full definition of the default light theme.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import defaultColors from './colors';\\nimport colorfn from 'color';\\n\\nconst colors = {\\n  ...defaultColors,\\n\\n  primary: defaultColors.red,\\n  primaryDark: defaultColors.blueDark,\\n  fontLight: '#efefef',\\n  font: '#dddddd',\\n  fontDark: '#8a8a8a',\\n  background: '#29282A',\\n  mainBackground: '#1E1E1F',\\n  border: '#323234',\\n  hover: defaultColors.red,\\n  shadow: defaultColors.gray + '33',\\n};\\n\\nconst pageLayout = {\\n  leftWidth: '318px',\\n  leftMargin: '30px',\\n  rightWidth: '',\\n  rightMargin: '',\\n};\\n\\nconst transitions = {\\n  hover: 'all .5s cubic-bezier(0.25, 0.8, 0.25, 1) 0s',\\n  hoverFast: 'all .3s cubic-bezier(0.25, 0.8, 0.25, 1) 0s',\\n  hoverColor: 'color .5s cubic-bezier(0.25, 0.8, 0.25, 1) 0s',\\n};\\n\\nconst content = (colors) => ({\\n  background: colors.mainBackground,\\n  border: colors.border,\\n  font: colors.font,\\n  titleFont: colors.font,\\n  code: {\\n    border: colors.border,\\n    font: colors.fontDark,\\n    background: colors.background,\\n  },\\n});\\n\\nconst navigationSidebar = (colors) => ({\\n  backgroundSecondary: colors.background,\\n  backgroundPrimary: colors.background,\\n  border: colors.border,\\n  row: {\\n    hover: colors.border,\\n    active: colorfn(colors.white).mix(colorfn(colors.background)).whiten(3.5).hex(),\\n    activeBorder: colors.border,\\n    collapseHover: colors.hover,\\n  },\\n  font: {\\n    group: colorfn(colors.font).darken(0.2).hex(),\\n    base: colors.font,\\n    nested: colorfn(colors.font).lightn(1.2).hex(),\\n    active: colors.primary,\\n    hover: colors.primary,\\n  },\\n  poweredBy: {\\n    font: colors.grayLight,\\n    background: colors.border,\\n    hover: colors.primary,\\n  },\\n});\\n\\nconst header = (colors) => ({\\n  background: colors.background,\\n  shadow: colors.shadow,\\n  font: {\\n    base: colors.primary,\\n    hover: colorfn(colors.primary).negate().hex(),\\n  },\\n  border: colors.border,\\n  icons: {\\n    background: colors.background,\\n    shadow: colors.shadow,\\n    fill: colors.primary,\\n    stroke: colors.primary,\\n    hover: colors.primary,\\n  },\\n});\\n\\nconst search = (colors) => ({\\n  background: colors.background,\\n  mark: {\\n    font: colors.font,\\n    background: colors.primary,\\n  },\\n  font: {\\n    base: colors.font,\\n    hover: colors.font,\\n    highlight: colors.fontDark,\\n  },\\n  hover: colors.border,\\n  border: colors.border,\\n  pagination: {\\n    background: colors.mainBackground,\\n    border: colors.border,\\n    font: colors.font,\\n    hover: colors.border,\\n    current: {\\n      background: colors.primary,\\n      font: colorfn(colors.primary).negate().grayscale().hex(),\\n    },\\n  },\\n});\\n\\nconst editOnRepo = (colors) => ({\\n  background: colors.background,\\n  border: colors.border,\\n  hover: colors.hover,\\n  font: {\\n    base: colors.font,\\n    hover: colorfn(colors.primary).negate().grayscale().hex(),\\n  },\\n});\\n\\nconst jargon = (colors) => ({\\n  background: colors.background,\\n  border: colors.border,\\n  font: colors.font,\\n  shadow: colors.shadow,\\n});\\n\\nconst highlights = (colors) => ({\\n  warning: {\\n    border: colors.orange,\\n    background: colors.orangeLight,\\n    font: colors.fontDark,\\n  },\\n  error: {\\n    border: colors.red,\\n    background: colors.redLight,\\n    font: colors.fontDark,\\n  },\\n  info: {\\n    border: colors.blue,\\n    background: colors.blueLight,\\n    font: colors.fontDark,\\n  },\\n  tip: {\\n    border: colors.green,\\n    background: colors.greenLight,\\n    font: colors.fontDark,\\n  },\\n});\\n\\nconst table = (colors) => ({\\n  header: {\\n    background: colors.primary,\\n    font: colorfn(colors.primary).negate().grayscale().lighten(0.2).hex(),\\n  },\\n  oddRow: colors.mainBackground,\\n  evenRow: colors.background,\\n  rowHover: colors.hover + '3d',\\n  border: colors.border,\\n});\\n\\nconst tableOfContents = (colors) => ({\\n  background: colors.mainBackground,\\n  font: {\\n    base: colors.font,\\n    hover: colors.primary,\\n    current: colors.primary,\\n  },\\n  border: colors.border,\\n});\\n\\nconst previousNext = (colors) => ({\\n  background: colors.mainBackground,\\n  hover: colors.primary,\\n  font: colors.font,\\n  fontLabel: colors.font,\\n  border: colors.border,\\n  shadow: colors.shadow,\\n});\\n\\nconst scrollTop = (colors) => ({\\n  background: colors.primary,\\n  hover: colorfn(colors.primary).darken(0.4).hex(),\\n  arrow: colorfn(colors.primary).negate().grayscale().lighten(0.4).rgb().string(),\\n});\\n\\nexport default {\\n  colors: colors,\\n  layout: pageLayout,\\n  transitions: transitions,\\n  header: header,\\n  search: search,\\n  navigationSidebar: navigationSidebar,\\n  content: content,\\n  editOnRepo: editOnRepo,\\n  jargon: jargon,\\n  highlights: highlights,\\n  table: table,\\n  tableOfContents: tableOfContents,\\n  previousNext: previousNext,\\n  scrollTop: scrollTop,\\n};\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Themes / styling\",\n  \"order\": 3\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Info = makeShortcode(\"Info\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Themes is a way to customize BooGi app to meet your branding\nand desired look-and-feel. You can change color of nearly `}<strong parentName=\"p\">{`every`}</strong>{`\ncomponent on the page.`}</p>\n    <p>{`BooGi offers two themes: light and dark. By both themes are used.\nTo disable dark mode, set `}<inlineCode parentName=\"p\">{`features.darkMode.enabled=false`}</inlineCode>{`\nin `}<inlineCode parentName=\"p\">{`config.yml`}</inlineCode>{`.`}</p>\n    <p>{`Theme configuration is stored in `}<inlineCode parentName=\"p\">{`light.js`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`dark.js`}</inlineCode>{` files\nfor light and dark theme respectively. Additionally, BooGi\noffers a way to change basic colors used on the site. Default colors\ndefinition is stored in `}<inlineCode parentName=\"p\">{`colors.js`}</inlineCode>{` file. All these files are in\n`}<inlineCode parentName=\"p\">{`config/theme`}</inlineCode>{` directory of your BooGi app.`}</p>\n    <section><h2 parentName=\"section\">{`Understanding theme setup`}</h2><p parentName=\"section\">{`When using BooGi CLI, by default `}<a parentName=\"p\" {...{\n          \"href\": \"#minimal\"\n        }}>{`minimal`}</a>{` minimal configuration\nwill be present in configuration files.`}</p><p parentName=\"section\">{`You can use any CSS-compatible color format: HEX, RGB, RGBA, HSL, HSLA.`}</p><p parentName=\"section\">{`Base colors (red, green, blue etc..) are defined in `}<inlineCode parentName=\"p\">{`colors.js`}</inlineCode>{` library.\nYou can quickly change basic colors used.`}</p><p parentName=\"section\">{`Theme is split into certain page objects like header, sidebar, search,\ncontent etc. Each consists of dedicated set of theme properties.\nFor full list of properties check `}<a parentName=\"p\" {...{\n          \"href\": \"#full\"\n        }}>{`full`}</a>{` configuration\nreference.`}</p><p parentName=\"section\">{`If you don't want go deep into each object configuration, you can\napply minimal configuratin to customize BooGi app to your needs.\nCheck `}<a parentName=\"p\" {...{\n          \"href\": \"#minimal\"\n        }}>{`minimal configuration reference`}</a>{` for an example.`}</p><p parentName=\"section\">{`You can change any single parameter -- there is no need to change whole\nconfiguration of any object. The defaults will be applied to the rest.\nFor instance, if you want to override header background color,\nyou can just define:`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}>{`const header = (colors) => ({\n  background: '#3a4b5c'\n});\n`}</code></pre><p parentName=\"section\">{`Each object defined in the theme should receive `}<inlineCode parentName=\"p\">{`colors`}</inlineCode>{` parameter, which is\nan object of base colors, defined in the same file as `}<inlineCode parentName=\"p\">{`colors`}</inlineCode>{`. `}</p><Info mdxType=\"Info\">Remember to define each object as a function with colors parameter!</Info></section>\n    <section><h3 parentName=\"section\">{`Using color library`}</h3><p parentName=\"section\">{`BooGi uses `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` - a JavaScript library for immutable color conversion\nand manipulation with support for CSS color strings. It uses it to automatically\ncalculate values of some properties based on the default colors used. Thanks to it\nyou don't need to care about each single color on the page -- BooGi will do it for you.\nCheck `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/Qix-/color\"\n        }}>{`this site`}</a>{` for details about `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` library.`}</p><p parentName=\"section\">{`You can use `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` library in your theme definition. For example:`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}>{`import colorfn from 'color';\n\nconst search = (colors) => ({\n  background: colorfn(colors.background).darken(1.3).rgb().string(),\n  pagination: {\n    current: {\n      font: colorfn(colors.primary).negate().grayscale().hex(),\n    },\n  },\n});\n`}</code></pre></section>\n    <section><h2 parentName=\"section\">{`Minimal`}</h2><p parentName=\"section\">{`Minimal configuration can be used to quickly customize theme to your needs.\nYou can change here basic colors, which are then referenced (used) in other\npage objects.`}</p><p parentName=\"section\"><inlineCode parentName=\"p\">{`colors`}</inlineCode>{` object is the most important one when it comes to defining the theme --\nall other objects use its fields to properly set up colors (you can alter\nthis behavior, see `}<a parentName=\"p\" {...{\n          \"href\": \"#full\"\n        }}>{`full configuration`}</a>{`).`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}>{`import defaultColors from './colors';\n\nconst colors = {\n  ...defaultColors,\n\n  primary: defaultColors.red,\n  primaryDark: defaultColors.blueDark,\n  font: '#dddddd',\n  fontDark: '#8a8a8a',\n  background: '#29282A',\n  mainBackground: '#1E1E1F',\n  border: '#323234',\n  hover: defaultColors.red,\n  shadow: defaultColors.gray + '33',\n};\n\nexport default {\n  colors: colors,\n};\n`}</code></pre></section>\n    <section><h2 parentName=\"section\">{`Full`}</h2><p parentName=\"section\">{`Reference below presents full theme configuration for all fields.\nIt contains also example of using `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` library.\nIf you're interested in actual BooGi base configuration, check\n`}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/filipowm/BooGi/blob/develop/src/theme/base.js\"\n        }}>{`https://github.com/filipowm/BooGi/blob/develop/src/theme/base.js`}</a>{` .\nIt contains full definition of the default light theme.`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}>{`import defaultColors from './colors';\nimport colorfn from 'color';\n\nconst colors = {\n  ...defaultColors,\n\n  primary: defaultColors.red,\n  primaryDark: defaultColors.blueDark,\n  fontLight: '#efefef',\n  font: '#dddddd',\n  fontDark: '#8a8a8a',\n  background: '#29282A',\n  mainBackground: '#1E1E1F',\n  border: '#323234',\n  hover: defaultColors.red,\n  shadow: defaultColors.gray + '33',\n};\n\nconst pageLayout = {\n  leftWidth: '318px',\n  leftMargin: '30px',\n  rightWidth: '',\n  rightMargin: '',\n};\n\nconst transitions = {\n  hover: 'all .5s cubic-bezier(0.25, 0.8, 0.25, 1) 0s',\n  hoverFast: 'all .3s cubic-bezier(0.25, 0.8, 0.25, 1) 0s',\n  hoverColor: 'color .5s cubic-bezier(0.25, 0.8, 0.25, 1) 0s',\n};\n\nconst content = (colors) => ({\n  background: colors.mainBackground,\n  border: colors.border,\n  font: colors.font,\n  titleFont: colors.font,\n  code: {\n    border: colors.border,\n    font: colors.fontDark,\n    background: colors.background,\n  },\n});\n\nconst navigationSidebar = (colors) => ({\n  backgroundSecondary: colors.background,\n  backgroundPrimary: colors.background,\n  border: colors.border,\n  row: {\n    hover: colors.border,\n    active: colorfn(colors.white).mix(colorfn(colors.background)).whiten(3.5).hex(),\n    activeBorder: colors.border,\n    collapseHover: colors.hover,\n  },\n  font: {\n    group: colorfn(colors.font).darken(0.2).hex(),\n    base: colors.font,\n    nested: colorfn(colors.font).lightn(1.2).hex(),\n    active: colors.primary,\n    hover: colors.primary,\n  },\n  poweredBy: {\n    font: colors.grayLight,\n    background: colors.border,\n    hover: colors.primary,\n  },\n});\n\nconst header = (colors) => ({\n  background: colors.background,\n  shadow: colors.shadow,\n  font: {\n    base: colors.primary,\n    hover: colorfn(colors.primary).negate().hex(),\n  },\n  border: colors.border,\n  icons: {\n    background: colors.background,\n    shadow: colors.shadow,\n    fill: colors.primary,\n    stroke: colors.primary,\n    hover: colors.primary,\n  },\n});\n\nconst search = (colors) => ({\n  background: colors.background,\n  mark: {\n    font: colors.font,\n    background: colors.primary,\n  },\n  font: {\n    base: colors.font,\n    hover: colors.font,\n    highlight: colors.fontDark,\n  },\n  hover: colors.border,\n  border: colors.border,\n  pagination: {\n    background: colors.mainBackground,\n    border: colors.border,\n    font: colors.font,\n    hover: colors.border,\n    current: {\n      background: colors.primary,\n      font: colorfn(colors.primary).negate().grayscale().hex(),\n    },\n  },\n});\n\nconst editOnRepo = (colors) => ({\n  background: colors.background,\n  border: colors.border,\n  hover: colors.hover,\n  font: {\n    base: colors.font,\n    hover: colorfn(colors.primary).negate().grayscale().hex(),\n  },\n});\n\nconst jargon = (colors) => ({\n  background: colors.background,\n  border: colors.border,\n  font: colors.font,\n  shadow: colors.shadow,\n});\n\nconst highlights = (colors) => ({\n  warning: {\n    border: colors.orange,\n    background: colors.orangeLight,\n    font: colors.fontDark,\n  },\n  error: {\n    border: colors.red,\n    background: colors.redLight,\n    font: colors.fontDark,\n  },\n  info: {\n    border: colors.blue,\n    background: colors.blueLight,\n    font: colors.fontDark,\n  },\n  tip: {\n    border: colors.green,\n    background: colors.greenLight,\n    font: colors.fontDark,\n  },\n});\n\nconst table = (colors) => ({\n  header: {\n    background: colors.primary,\n    font: colorfn(colors.primary).negate().grayscale().lighten(0.2).hex(),\n  },\n  oddRow: colors.mainBackground,\n  evenRow: colors.background,\n  rowHover: colors.hover + '3d',\n  border: colors.border,\n});\n\nconst tableOfContents = (colors) => ({\n  background: colors.mainBackground,\n  font: {\n    base: colors.font,\n    hover: colors.primary,\n    current: colors.primary,\n  },\n  border: colors.border,\n});\n\nconst previousNext = (colors) => ({\n  background: colors.mainBackground,\n  hover: colors.primary,\n  font: colors.font,\n  fontLabel: colors.font,\n  border: colors.border,\n  shadow: colors.shadow,\n});\n\nconst scrollTop = (colors) => ({\n  background: colors.primary,\n  hover: colorfn(colors.primary).darken(0.4).hex(),\n  arrow: colorfn(colors.primary).negate().grayscale().lighten(0.4).rgb().string(),\n});\n\nexport default {\n  colors: colors,\n  layout: pageLayout,\n  transitions: transitions,\n  header: header,\n  search: search,\n  navigationSidebar: navigationSidebar,\n  content: content,\n  editOnRepo: editOnRepo,\n  jargon: jargon,\n  highlights: highlights,\n  table: table,\n  tableOfContents: tableOfContents,\n  previousNext: previousNext,\n  scrollTop: scrollTop,\n};\n`}</code></pre></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}