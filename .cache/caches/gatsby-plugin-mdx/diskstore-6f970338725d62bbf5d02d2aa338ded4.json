{"expireTime":9007200878668033000,"key":"gatsby-plugin-mdx-entire-payload-35fed59c640372ef1f0258fb200df995-","val":{"mdast":{"type":"root","children":[{"type":"jsx","value":"<Tip>","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":6,"offset":6},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"BooGi CLI is a recommended way of working with BooGi apps","position":{"start":{"line":4,"column":3,"offset":10},"end":{"line":4,"column":60,"offset":67},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":8},"end":{"line":4,"column":62,"offset":69},"indent":[]}},{"type":"text","value":".\nHowever, if you need full control over your app, what comes with\na cost of significantly increased complexity, you can\nstill use Gatsby CLI.","position":{"start":{"line":4,"column":62,"offset":69},"end":{"line":7,"column":22,"offset":211},"indent":[1,1,1]}}],"position":{"start":{"line":4,"column":1,"offset":8},"end":{"line":7,"column":22,"offset":211},"indent":[1,1,1]}},{"type":"jsx","value":"</Tip>","position":{"start":{"line":9,"column":1,"offset":213},"end":{"line":9,"column":7,"offset":219},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"CLI for BooGi used to speed up and simplify development\nof BooGi-based apps.","position":{"start":{"line":11,"column":1,"offset":221},"end":{"line":12,"column":21,"offset":297},"indent":[1]}}],"position":{"start":{"line":11,"column":1,"offset":221},"end":{"line":12,"column":21,"offset":297},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":":label: Requirements","position":{"start":{"line":14,"column":4,"offset":302},"end":{"line":14,"column":24,"offset":322},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":299},"end":{"line":14,"column":24,"offset":322},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"NodeJS in version ","position":{"start":{"line":16,"column":3,"offset":326},"end":{"line":16,"column":21,"offset":344},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"12.13","position":{"start":{"line":16,"column":22,"offset":345},"end":{"line":16,"column":27,"offset":350},"indent":[]}}],"position":{"start":{"line":16,"column":21,"offset":344},"end":{"line":16,"column":28,"offset":351},"indent":[]}},{"type":"text","value":" or higher","position":{"start":{"line":16,"column":28,"offset":351},"end":{"line":16,"column":38,"offset":361},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":326},"end":{"line":16,"column":38,"offset":361},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":324},"end":{"line":16,"column":38,"offset":361},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Yarn (","position":{"start":{"line":17,"column":3,"offset":364},"end":{"line":17,"column":9,"offset":370},"indent":[]}},{"type":"inlineCode","value":"npm install -g yarn","position":{"start":{"line":17,"column":9,"offset":370},"end":{"line":17,"column":30,"offset":391},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":17,"column":30,"offset":391},"end":{"line":17,"column":31,"offset":392},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":364},"end":{"line":17,"column":31,"offset":392},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":362},"end":{"line":17,"column":31,"offset":392},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"BooGi CLI ","position":{"start":{"line":18,"column":3,"offset":395},"end":{"line":18,"column":13,"offset":405},"indent":[]}},{"type":"inlineCode","value":"npm install -g boogi-cli","position":{"start":{"line":18,"column":13,"offset":405},"end":{"line":18,"column":39,"offset":431},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":395},"end":{"line":18,"column":39,"offset":431},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":393},"end":{"line":18,"column":39,"offset":431},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":324},"end":{"line":18,"column":39,"offset":431},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":":book: Guide","position":{"start":{"line":20,"column":4,"offset":436},"end":{"line":20,"column":16,"offset":448},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":433},"end":{"line":20,"column":16,"offset":448},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"App structure","position":{"start":{"line":23,"column":5,"offset":455},"end":{"line":23,"column":18,"offset":468},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":451},"end":{"line":23,"column":18,"offset":468},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"BooGi CLI is creating following directory structure","position":{"start":{"line":25,"column":1,"offset":470},"end":{"line":25,"column":52,"offset":521},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":470},"end":{"line":25,"column":52,"offset":521},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"+-- .boogi.yml   # BooGi CLI configuration file\n+-- package.json # \n+-- README.md    # Your BooGi app readme\n│\n+-- assets/      # Directory with static assets not used inside content (e.g. logo)\n│\n+-- config/      # Directory with BooGi app configuration\n│   +-- config.yml  # BooGi configuration file\n│   +-- jargon.yml  # Jargon (abbrevations / definitions) configuration file\n│   +-- theme/      # Directory with BooGi app theme (look-and-feel) configuration\n│       +-- colors.js # Base colors configuration file\n│       +-- dark.js   # Dark theme configuration file\n│       +-- light.js  # Light theme configuration file\n│\n+-- content/     # Directory with your app content\n│   +-- index.md # Root page content file (do not remove!)\n│\n+-- snippets/ # Directory with external code snippets, which can be embedded in content","position":{"start":{"line":27,"column":1,"offset":523},"end":{"line":46,"column":4,"offset":1362},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"boogi init","position":{"start":{"line":48,"column":5,"offset":1368},"end":{"line":48,"column":15,"offset":1378},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1364},"end":{"line":48,"column":15,"offset":1378},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initialize BooGi app in a given path. This gives a way to easily and quickly\nstart a BooGi project.","position":{"start":{"line":50,"column":1,"offset":1380},"end":{"line":51,"column":23,"offset":1479},"indent":[1]}}],"position":{"start":{"line":50,"column":1,"offset":1380},"end":{"line":51,"column":23,"offset":1479},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"boogi init [path] [-f|--full] [--skip|--skip-config] [-d|--debug]","position":{"start":{"line":53,"column":1,"offset":1481},"end":{"line":55,"column":4,"offset":1554},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"path","position":{"start":{"line":57,"column":1,"offset":1556},"end":{"line":57,"column":7,"offset":1562},"indent":[]}},{"type":"text","value":" - path where BooGi project will be initialized. Defaults to current directory.","position":{"start":{"line":57,"column":7,"offset":1562},"end":{"line":57,"column":86,"offset":1641},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1556},"end":{"line":57,"column":86,"offset":1641},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"-f","position":{"start":{"line":59,"column":1,"offset":1643},"end":{"line":59,"column":5,"offset":1647},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":59,"column":5,"offset":1647},"end":{"line":59,"column":7,"offset":1649},"indent":[]}},{"type":"inlineCode","value":"--full","position":{"start":{"line":59,"column":7,"offset":1649},"end":{"line":59,"column":15,"offset":1657},"indent":[]}},{"type":"text","value":" - use full (advanced) configuration wizard. Guides you through most of available configuration options.","position":{"start":{"line":59,"column":15,"offset":1657},"end":{"line":59,"column":119,"offset":1761},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1643},"end":{"line":59,"column":119,"offset":1761},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"--skip","position":{"start":{"line":61,"column":1,"offset":1763},"end":{"line":61,"column":9,"offset":1771},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":61,"column":9,"offset":1771},"end":{"line":61,"column":11,"offset":1773},"indent":[]}},{"type":"inlineCode","value":"--skip-config","position":{"start":{"line":61,"column":11,"offset":1773},"end":{"line":61,"column":26,"offset":1788},"indent":[]}},{"type":"text","value":" - skip configuration wizard. Default values will be applied.","position":{"start":{"line":61,"column":26,"offset":1788},"end":{"line":61,"column":87,"offset":1849},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1763},"end":{"line":61,"column":87,"offset":1849},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"-d","position":{"start":{"line":63,"column":1,"offset":1851},"end":{"line":63,"column":5,"offset":1855},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":63,"column":5,"offset":1855},"end":{"line":63,"column":7,"offset":1857},"indent":[]}},{"type":"inlineCode","value":"--debug","position":{"start":{"line":63,"column":7,"offset":1857},"end":{"line":63,"column":16,"offset":1866},"indent":[]}},{"type":"text","value":" - enable debugging mode.","position":{"start":{"line":63,"column":16,"offset":1866},"end":{"line":63,"column":41,"offset":1891},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1851},"end":{"line":63,"column":41,"offset":1891},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"boogi develop","position":{"start":{"line":65,"column":5,"offset":1897},"end":{"line":65,"column":18,"offset":1910},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1893},"end":{"line":65,"column":18,"offset":1910},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Start BooGi development server on specified port (default 8000).\nThe development server supports live (hot) reload on any changes.","position":{"start":{"line":67,"column":1,"offset":1912},"end":{"line":68,"column":66,"offset":2042},"indent":[1]}}],"position":{"start":{"line":67,"column":1,"offset":1912},"end":{"line":68,"column":66,"offset":2042},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"boogi develop [-p|--port] [-d|--debug]","position":{"start":{"line":70,"column":1,"offset":2044},"end":{"line":72,"column":4,"offset":2090},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"-p","position":{"start":{"line":73,"column":1,"offset":2091},"end":{"line":73,"column":5,"offset":2095},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":73,"column":5,"offset":2095},"end":{"line":73,"column":7,"offset":2097},"indent":[]}},{"type":"inlineCode","value":"--port","position":{"start":{"line":73,"column":7,"offset":2097},"end":{"line":73,"column":15,"offset":2105},"indent":[]}},{"type":"text","value":" - port on which development server will run. Defaults to ","position":{"start":{"line":73,"column":15,"offset":2105},"end":{"line":73,"column":73,"offset":2163},"indent":[]}},{"type":"inlineCode","value":"8000","position":{"start":{"line":73,"column":73,"offset":2163},"end":{"line":73,"column":79,"offset":2169},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":73,"column":79,"offset":2169},"end":{"line":73,"column":80,"offset":2170},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2091},"end":{"line":73,"column":80,"offset":2170},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"-d","position":{"start":{"line":75,"column":1,"offset":2172},"end":{"line":75,"column":5,"offset":2176},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":75,"column":5,"offset":2176},"end":{"line":75,"column":7,"offset":2178},"indent":[]}},{"type":"inlineCode","value":"--debug","position":{"start":{"line":75,"column":7,"offset":2178},"end":{"line":75,"column":16,"offset":2187},"indent":[]}},{"type":"text","value":" - enable debugging mode.","position":{"start":{"line":75,"column":16,"offset":2187},"end":{"line":75,"column":41,"offset":2212},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2172},"end":{"line":75,"column":41,"offset":2212},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note","position":{"start":{"line":77,"column":3,"offset":2216},"end":{"line":77,"column":7,"offset":2220},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2214},"end":{"line":77,"column":9,"offset":2222},"indent":[]}},{"type":"text","value":" Changes done to ","position":{"start":{"line":77,"column":9,"offset":2222},"end":{"line":77,"column":26,"offset":2239},"indent":[]}},{"type":"inlineCode","value":"config/jargon.yml","position":{"start":{"line":77,"column":26,"offset":2239},"end":{"line":77,"column":45,"offset":2258},"indent":[]}},{"type":"text","value":" will not be reloaded.\nTo apply changes to jargon you must restart server.","position":{"start":{"line":77,"column":45,"offset":2258},"end":{"line":78,"column":52,"offset":2332},"indent":[1]}}],"position":{"start":{"line":77,"column":1,"offset":2214},"end":{"line":78,"column":52,"offset":2332},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"boogi build","position":{"start":{"line":80,"column":5,"offset":2338},"end":{"line":80,"column":16,"offset":2349},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2334},"end":{"line":80,"column":16,"offset":2349},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Build BooGi project. Deployment-ready package will be created\nin ","position":{"start":{"line":82,"column":1,"offset":2351},"end":{"line":83,"column":4,"offset":2416},"indent":[1]}},{"type":"inlineCode","value":"public","position":{"start":{"line":83,"column":4,"offset":2416},"end":{"line":83,"column":12,"offset":2424},"indent":[]}},{"type":"text","value":" directory.","position":{"start":{"line":83,"column":12,"offset":2424},"end":{"line":83,"column":23,"offset":2435},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":2351},"end":{"line":83,"column":23,"offset":2435},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"boogi build [-a|--archive] [-d|--debug]","position":{"start":{"line":85,"column":1,"offset":2437},"end":{"line":87,"column":4,"offset":2484},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"-a","position":{"start":{"line":89,"column":1,"offset":2486},"end":{"line":89,"column":5,"offset":2490},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":89,"column":5,"offset":2490},"end":{"line":89,"column":7,"offset":2492},"indent":[]}},{"type":"inlineCode","value":"--archive","position":{"start":{"line":89,"column":7,"offset":2492},"end":{"line":89,"column":18,"offset":2503},"indent":[]}},{"type":"text","value":" - archive (zip) result directory. ","position":{"start":{"line":89,"column":18,"offset":2503},"end":{"line":89,"column":53,"offset":2538},"indent":[]}},{"type":"inlineCode","value":"public.zip","position":{"start":{"line":89,"column":53,"offset":2538},"end":{"line":89,"column":65,"offset":2550},"indent":[]}},{"type":"text","value":" file will be created\nwith your built app.","position":{"start":{"line":89,"column":65,"offset":2550},"end":{"line":90,"column":21,"offset":2592},"indent":[1]}}],"position":{"start":{"line":89,"column":1,"offset":2486},"end":{"line":90,"column":21,"offset":2592},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"-d","position":{"start":{"line":92,"column":1,"offset":2594},"end":{"line":92,"column":5,"offset":2598},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":92,"column":5,"offset":2598},"end":{"line":92,"column":7,"offset":2600},"indent":[]}},{"type":"inlineCode","value":"--debug","position":{"start":{"line":92,"column":7,"offset":2600},"end":{"line":92,"column":16,"offset":2609},"indent":[]}},{"type":"text","value":" - enable debugging mode.","position":{"start":{"line":92,"column":16,"offset":2609},"end":{"line":92,"column":41,"offset":2634},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2594},"end":{"line":92,"column":41,"offset":2634},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"boogi clean","position":{"start":{"line":94,"column":5,"offset":2640},"end":{"line":94,"column":16,"offset":2651},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2636},"end":{"line":94,"column":16,"offset":2651},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Wipe the local BooGi environment including built assets and cache.\nUseful in case of issues while running ","position":{"start":{"line":96,"column":1,"offset":2653},"end":{"line":97,"column":40,"offset":2759},"indent":[1]}},{"type":"inlineCode","value":"build","position":{"start":{"line":97,"column":40,"offset":2759},"end":{"line":97,"column":47,"offset":2766},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":97,"column":47,"offset":2766},"end":{"line":97,"column":51,"offset":2770},"indent":[]}},{"type":"inlineCode","value":"develop","position":{"start":{"line":97,"column":51,"offset":2770},"end":{"line":97,"column":60,"offset":2779},"indent":[]}},{"type":"text","value":" commands.","position":{"start":{"line":97,"column":60,"offset":2779},"end":{"line":97,"column":70,"offset":2789},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":2653},"end":{"line":97,"column":70,"offset":2789},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"boogi clean","position":{"start":{"line":99,"column":1,"offset":2791},"end":{"line":101,"column":4,"offset":2810},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":":construction_worker: Roadmap","position":{"start":{"line":103,"column":4,"offset":2815},"end":{"line":103,"column":33,"offset":2844},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":2812},"end":{"line":103,"column":33,"offset":2844},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"add feature to manage navigation sidebar (create, edit, remove groups etc..)","position":{"start":{"line":105,"column":3,"offset":2848},"end":{"line":105,"column":79,"offset":2924},"indent":[]}}],"position":{"start":{"line":105,"column":3,"offset":2848},"end":{"line":105,"column":79,"offset":2924},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":2846},"end":{"line":105,"column":79,"offset":2924},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"add feature to manage pages (create, edit, remove etc..)","position":{"start":{"line":106,"column":3,"offset":2927},"end":{"line":106,"column":59,"offset":2983},"indent":[]}}],"position":{"start":{"line":106,"column":3,"offset":2927},"end":{"line":106,"column":59,"offset":2983},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":2925},"end":{"line":106,"column":59,"offset":2983},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"add feature to manage theme","position":{"start":{"line":107,"column":3,"offset":2986},"end":{"line":107,"column":30,"offset":3013},"indent":[]}}],"position":{"start":{"line":107,"column":3,"offset":2986},"end":{"line":107,"column":30,"offset":3013},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":2984},"end":{"line":107,"column":30,"offset":3013},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":2846},"end":{"line":107,"column":30,"offset":3013},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"BooGi CLI\",\"order\":4}","position":{"start":{"line":109,"column":1,"offset":3015},"end":{"line":109,"column":60,"offset":3074},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":109,"column":60,"offset":3074}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"BooGi CLI\",\n  \"order\": 4\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Tip = makeShortcode(\"Tip\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Tip, {\n    mdxType: \"Tip\"\n  }, mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"BooGi CLI is a recommended way of working with BooGi apps\"), \".\\nHowever, if you need full control over your app, what comes with\\na cost of significantly increased complexity, you can\\nstill use Gatsby CLI.\")), mdx(\"p\", null, \"CLI for BooGi used to speed up and simplify development\\nof BooGi-based apps.\"), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"\\uD83C\\uDFF7\\uFE0F Requirements\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NodeJS in version \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"12.13\"), \" or higher\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Yarn (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm install -g yarn\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BooGi CLI \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm install -g boogi-cli\")))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"\\uD83D\\uDCD6 Guide\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"App structure\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"BooGi CLI is creating following directory structure\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"+-- .boogi.yml   # BooGi CLI configuration file\\n+-- package.json # \\n+-- README.md    # Your BooGi app readme\\n\\u2502\\n+-- assets/      # Directory with static assets not used inside content (e.g. logo)\\n\\u2502\\n+-- config/      # Directory with BooGi app configuration\\n\\u2502   +-- config.yml  # BooGi configuration file\\n\\u2502   +-- jargon.yml  # Jargon (abbrevations / definitions) configuration file\\n\\u2502   +-- theme/      # Directory with BooGi app theme (look-and-feel) configuration\\n\\u2502       +-- colors.js # Base colors configuration file\\n\\u2502       +-- dark.js   # Dark theme configuration file\\n\\u2502       +-- light.js  # Light theme configuration file\\n\\u2502\\n+-- content/     # Directory with your app content\\n\\u2502   +-- index.md # Root page content file (do not remove!)\\n\\u2502\\n+-- snippets/ # Directory with external code snippets, which can be embedded in content\\n\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"boogi init\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Initialize BooGi app in a given path. This gives a way to easily and quickly\\nstart a BooGi project.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"boogi init [path] [-f|--full] [--skip|--skip-config] [-d|--debug]\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"path\"), \" - path where BooGi project will be initialized. Defaults to current directory.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-f\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--full\"), \" - use full (advanced) configuration wizard. Guides you through most of available configuration options.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--skip\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--skip-config\"), \" - skip configuration wizard. Default values will be applied.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-d\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--debug\"), \" - enable debugging mode.\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"boogi develop\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Start BooGi development server on specified port (default 8000).\\nThe development server supports live (hot) reload on any changes.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"boogi develop [-p|--port] [-d|--debug]\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-p\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--port\"), \" - port on which development server will run. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"8000\"), \".\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-d\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--debug\"), \" - enable debugging mode.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \" Changes done to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"config/jargon.yml\"), \" will not be reloaded.\\nTo apply changes to jargon you must restart server.\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"boogi build\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Build BooGi project. Deployment-ready package will be created\\nin \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"public\"), \" directory.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"boogi build [-a|--archive] [-d|--debug]\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-a\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--archive\"), \" - archive (zip) result directory. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"public.zip\"), \" file will be created\\nwith your built app.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-d\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--debug\"), \" - enable debugging mode.\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"boogi clean\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Wipe the local BooGi environment including built assets and cache.\\nUseful in case of issues while running \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"develop\"), \" commands.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"boogi clean\\n\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"\\uD83D\\uDC77\\u200D\\u2642\\uFE0F Roadmap\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"add feature to manage navigation sidebar (create, edit, remove groups etc..)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"add feature to manage pages (create, edit, remove etc..)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"add feature to manage theme\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"BooGi CLI\",\n  \"order\": 4\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Tip = makeShortcode(\"Tip\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Tip mdxType=\"Tip\">\n      <p><strong parentName=\"p\">{`BooGi CLI is a recommended way of working with BooGi apps`}</strong>{`.\nHowever, if you need full control over your app, what comes with\na cost of significantly increased complexity, you can\nstill use Gatsby CLI.`}</p>\n    </Tip>\n    <p>{`CLI for BooGi used to speed up and simplify development\nof BooGi-based apps.`}</p>\n    <section><h2 parentName=\"section\">{`🏷️ Requirements`}</h2><ul parentName=\"section\">\n        <li parentName=\"ul\">{`NodeJS in version `}<em parentName=\"li\">{`12.13`}</em>{` or higher`}</li>\n        <li parentName=\"ul\">{`Yarn (`}<inlineCode parentName=\"li\">{`npm install -g yarn`}</inlineCode>{`)`}</li>\n        <li parentName=\"ul\">{`BooGi CLI `}<inlineCode parentName=\"li\">{`npm install -g boogi-cli`}</inlineCode></li>\n      </ul></section>\n    <section><h2 parentName=\"section\">{`📖 Guide`}</h2></section>\n    <section><h3 parentName=\"section\">{`App structure`}</h3><p parentName=\"section\">{`BooGi CLI is creating following directory structure`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{\n          \"className\": \"language-bash\"\n        }}>{`+-- .boogi.yml   # BooGi CLI configuration file\n+-- package.json # \n+-- README.md    # Your BooGi app readme\n│\n+-- assets/      # Directory with static assets not used inside content (e.g. logo)\n│\n+-- config/      # Directory with BooGi app configuration\n│   +-- config.yml  # BooGi configuration file\n│   +-- jargon.yml  # Jargon (abbrevations / definitions) configuration file\n│   +-- theme/      # Directory with BooGi app theme (look-and-feel) configuration\n│       +-- colors.js # Base colors configuration file\n│       +-- dark.js   # Dark theme configuration file\n│       +-- light.js  # Light theme configuration file\n│\n+-- content/     # Directory with your app content\n│   +-- index.md # Root page content file (do not remove!)\n│\n+-- snippets/ # Directory with external code snippets, which can be embedded in content\n`}</code></pre></section>\n    <section><h3 parentName=\"section\">{`boogi init`}</h3><p parentName=\"section\">{`Initialize BooGi app in a given path. This gives a way to easily and quickly\nstart a BooGi project.`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`boogi init [path] [-f|--full] [--skip|--skip-config] [-d|--debug]\n`}</code></pre><p parentName=\"section\"><inlineCode parentName=\"p\">{`path`}</inlineCode>{` - path where BooGi project will be initialized. Defaults to current directory.`}</p><p parentName=\"section\"><inlineCode parentName=\"p\">{`-f`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`--full`}</inlineCode>{` - use full (advanced) configuration wizard. Guides you through most of available configuration options.`}</p><p parentName=\"section\"><inlineCode parentName=\"p\">{`--skip`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`--skip-config`}</inlineCode>{` - skip configuration wizard. Default values will be applied.`}</p><p parentName=\"section\"><inlineCode parentName=\"p\">{`-d`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`--debug`}</inlineCode>{` - enable debugging mode.`}</p></section>\n    <section><h3 parentName=\"section\">{`boogi develop`}</h3><p parentName=\"section\">{`Start BooGi development server on specified port (default 8000).\nThe development server supports live (hot) reload on any changes.`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`boogi develop [-p|--port] [-d|--debug]\n`}</code></pre><p parentName=\"section\"><inlineCode parentName=\"p\">{`-p`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`--port`}</inlineCode>{` - port on which development server will run. Defaults to `}<inlineCode parentName=\"p\">{`8000`}</inlineCode>{`.`}</p><p parentName=\"section\"><inlineCode parentName=\"p\">{`-d`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`--debug`}</inlineCode>{` - enable debugging mode.`}</p><p parentName=\"section\"><strong parentName=\"p\">{`Note`}</strong>{` Changes done to `}<inlineCode parentName=\"p\">{`config/jargon.yml`}</inlineCode>{` will not be reloaded.\nTo apply changes to jargon you must restart server.`}</p></section>\n    <section><h3 parentName=\"section\">{`boogi build`}</h3><p parentName=\"section\">{`Build BooGi project. Deployment-ready package will be created\nin `}<inlineCode parentName=\"p\">{`public`}</inlineCode>{` directory.`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`boogi build [-a|--archive] [-d|--debug]\n`}</code></pre><p parentName=\"section\"><inlineCode parentName=\"p\">{`-a`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`--archive`}</inlineCode>{` - archive (zip) result directory. `}<inlineCode parentName=\"p\">{`public.zip`}</inlineCode>{` file will be created\nwith your built app.`}</p><p parentName=\"section\"><inlineCode parentName=\"p\">{`-d`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`--debug`}</inlineCode>{` - enable debugging mode.`}</p></section>\n    <section><h3 parentName=\"section\">{`boogi clean`}</h3><p parentName=\"section\">{`Wipe the local BooGi environment including built assets and cache.\nUseful in case of issues while running `}<inlineCode parentName=\"p\">{`build`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`develop`}</inlineCode>{` commands.`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`boogi clean\n`}</code></pre></section>\n    <section><h2 parentName=\"section\">{`👷‍♂️ Roadmap`}</h2><ul parentName=\"section\">\n        <li parentName=\"ul\">{`add feature to manage navigation sidebar (create, edit, remove groups etc..)`}</li>\n        <li parentName=\"ul\">{`add feature to manage pages (create, edit, remove etc..)`}</li>\n        <li parentName=\"ul\">{`add feature to manage theme`}</li>\n      </ul></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}